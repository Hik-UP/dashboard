webpackHotUpdate_N_E("pages/control",{

/***/ "./pages/control/index.js":
/*!********************************!*\
  !*** ./pages/control/index.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Control; });\n/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../components/Layout */ \"./components/Layout.js\");\n/* harmony import */ var _services_API__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/API */ \"./services/API.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! mapbox-gl */ \"./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _services_UserDataService__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/UserDataService */ \"./services/UserDataService.js\");\n/* harmony import */ var _components_SearchBar__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/SearchBar */ \"./components/SearchBar.js\");\n/* harmony import */ var mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! mapbox-gl/dist/mapbox-gl.css */ \"./node_modules/mapbox-gl/dist/mapbox-gl.css\");\n/* harmony import */ var mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! antd */ \"./node_modules/antd/es/index.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__);\n\n\nvar _jsxFileName = \"/Users/draki/Documents/Epitech/EIP/dashboard/admin/pages/control/index.js\",\n  _s = $RefreshSig$();\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\n\n\n\n\n\n\n\n\n\n\nmapbox_gl__WEBPACK_IMPORTED_MODULE_7___default.a.accessToken = 'pk.eyJ1IjoiaGljY3VwLXN0YWZmIiwiYSI6ImNsangxeHVkbzAyNmwzdHJ4cmJiYWZmMm4ifQ.yI4259jlMq2elDiT_uK1kg';\nfunction Control(access_token, user_data) {\n  _s();\n  var router = Object(next_router__WEBPACK_IMPORTED_MODULE_4__[\"useRouter\"])();\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(0.0),\n    newlat = _useState[0],\n    setnewlat = _useState[1];\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(0.0),\n    newlgn = _useState2[0],\n    setnewlgn = _useState2[1];\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n    address = _useState3[0],\n    setaddress = _useState3[1];\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n    resultsearch = _useState5[0],\n    setresultsearch = _useState5[1];\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n    selectedMarker = _useState6[0],\n    setselectedMarker = _useState6[1];\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])('Initial Value'),\n    parentState = _useState7[0],\n    setParentState = _useState7[1];\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n    Trails = _useState8[0],\n    setTrails = _useState8[1];\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n    lngLatSelected = _useState9[0],\n    setlngLatSelected = _useState9[1];\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n    markersLoaded = _useState10[0],\n    setMarkersLoaded = _useState10[1];\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n    username = _useState11[0],\n    setInputValueUsername = _useState11[1];\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n    email = _useState12[0],\n    setInputValueEmail = _useState12[1];\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(2.35),\n    lng = _useState13[0],\n    setLng = _useState13[1];\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(48.85),\n    lat = _useState14[0],\n    setLat = _useState14[1];\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(5),\n    zoom = _useState15[0],\n    setZoom = _useState15[1];\n  var map = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useRef\"])(null);\n  var mapContainer = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useRef\"])(null);\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n    isModalOpen = _useState16[0],\n    setIsModalOpen = _useState16[1];\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n    isModalOpenUpdate = _useState17[0],\n    setIsModalOpenUpdate = _useState17[1];\n  var showModaUpdate = function showModaUpdate() {\n    setIsModalOpenUpdate(true);\n  };\n  var handleOkUpdate = function handleOkUpdate() {\n    setIsModalOpenUpdate(false);\n  };\n  var handleCancelUpdate = function handleCancelUpdate() {\n    setIsModalOpenUpdate(false);\n  };\n  var showModal = function showModal() {\n    setIsModalOpen(true);\n  };\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            updateMarker(selectedMarker);\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var updateParentState = function updateParentState(newState) {\n    setParentState(newState);\n    setaddress(newState);\n    console.log(newState);\n  };\n  function fetchTrails() {\n    return _fetchTrails.apply(this, arguments);\n  }\n  function _fetchTrails() {\n    _fetchTrails = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var _user_data2, response, trails;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _user_data2 = _services_UserDataService__WEBPACK_IMPORTED_MODULE_8__[\"default\"].get();\n            console.log(_user_data2);\n            _context5.next = 5;\n            return _services_API__WEBPACK_IMPORTED_MODULE_6__[\"default\"].fetchTrails(\"POST\", '/api/trail/retrieve', _user_data2, true);\n          case 5:\n            response = _context5.sent;\n            trails = response.data.trails;\n            return _context5.abrupt(\"return\", trails);\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error('Error fetching Trails:', _context5.t0);\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[0, 10]]);\n    }));\n    return _fetchTrails.apply(this, arguments);\n  }\n  function getMarker(_x) {\n    return _getMarker.apply(this, arguments);\n  }\n  function _getMarker() {\n    _getMarker = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(selectedMarker) {\n      var trails, i, tmp;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            console.log('getMarker');\n            _context6.next = 3;\n            return fetchTrails();\n          case 3:\n            trails = _context6.sent;\n            console.dir(trails);\n            i = 0;\n          case 6:\n            if (!(i < trails.length)) {\n              _context6.next = 16;\n              break;\n            }\n            tmp = JSON.parse(trails[i].geoJSON);\n            console.log('selectedMArker :');\n            console.dir(selectedMarker);\n            if (!(typeof tmp.features !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0].geometry !== 'undefined' && typeof tmp.features[0].geometry.coordinates[0] !== 'undefined')) {\n              _context6.next = 13;\n              break;\n            }\n            if (!(tmp.features[0].geometry.coordinates[0][0] === selectedMarker.lng && tmp.features[0].geometry.coordinates[0][1] === selectedMarker.lat)) {\n              _context6.next = 13;\n              break;\n            }\n            return _context6.abrupt(\"return\", i);\n          case 13:\n            i++;\n            _context6.next = 6;\n            break;\n          case 16:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n    return _getMarker.apply(this, arguments);\n  }\n  function fetchCoordinates() {\n    return _fetchCoordinates.apply(this, arguments);\n  }\n  function _fetchCoordinates() {\n    _fetchCoordinates = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var response, data, _data$features$0$cent, longitude, latitude;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return fetch(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\".concat(address, \".json?access_token=\").concat(mapbox_gl__WEBPACK_IMPORTED_MODULE_7___default.a.accessToken));\n          case 3:\n            response = _context7.sent;\n            if (!response.ok) {\n              _context7.next = 14;\n              break;\n            }\n            _context7.next = 7;\n            return response.json();\n          case 7:\n            data = _context7.sent;\n            console.log(\"response : \" + JSON.stringify(data.features[0].center));\n            _data$features$0$cent = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(data.features[0].center, 2), longitude = _data$features$0$cent[0], latitude = _data$features$0$cent[1];\n            setnewlgn(data.features[0].center[0]);\n            setnewlat(data.features[0].center[1]);\n            _context7.next = 15;\n            break;\n          case 14:\n            console.error('Error fetching coordinates:', response.statusText);\n          case 15:\n            _context7.next = 20;\n            break;\n          case 17:\n            _context7.prev = 17;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.error('Error:', _context7.t0);\n          case 20:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7, null, [[0, 17]]);\n    }));\n    return _fetchCoordinates.apply(this, arguments);\n  }\n  function updateMarker(_x2) {\n    return _updateMarker.apply(this, arguments);\n  }\n  function _updateMarker() {\n    _updateMarker = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(selectedMarker) {\n      var index, data, trails, tmp, user_data, response, result;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return getMarker(selectedMarker);\n          case 2:\n            index = _context8.sent;\n            console.dir(index);\n            data = {};\n            _context8.next = 7;\n            return fetchTrails(user_data);\n          case 7:\n            trails = _context8.sent;\n            tmp = JSON.parse(trails[index].geoJSON);\n            console.log('tmp:');\n            console.dir(data.latitude);\n            data.id = trails[index].id;\n            data.latitude = newlat;\n            data.longitude = newlgn;\n            console.log(typeof tmp.features[0]);\n            console.log(\"fetchCoordinates : \" + newlat + \" \" + newlgn);\n            _context8.next = 18;\n            return fetchCoordinates();\n          case 18:\n            tmp.features[0].geometry.coordinates[0][0] = newlgn;\n            tmp.features[0].geometry.coordinates[0][1] = newlat;\n            console.log('tmp');\n            console.dir(tmp);\n            data.geoJSON = JSON.stringify(tmp);\n            console.log('here');\n            console.log(data);\n            user_data = _services_UserDataService__WEBPACK_IMPORTED_MODULE_8__[\"default\"].get();\n            _context8.next = 28;\n            return _services_API__WEBPACK_IMPORTED_MODULE_6__[\"default\"].CreateMarker('PUT', '/api/trail/update', user_data, data, true);\n          case 28:\n            response = _context8.sent;\n            result = response.data.trails;\n            console.log(result);\n            setIsModalOpenUpdate(false);\n            router.reload();\n          case 33:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    }));\n    return _updateMarker.apply(this, arguments);\n  }\n  var handleOk = /*#__PURE__*/function () {\n    var _ref2 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _user_data, trail, geojson, response;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _user_data = _services_UserDataService__WEBPACK_IMPORTED_MODULE_8__[\"default\"].get();\n            trail = {};\n            trail.name = \"Added by admin in dashboard\";\n            trail.address = \"Added by admin in dashboard\";\n            trail.description = \"Added by admin in dashboard\";\n            trail.pictures = [\"https://google.com\"];\n            trail.latitude = lngLatSelected.lat;\n            trail.longitude = lngLatSelected.lng;\n            trail.difficulty = 0;\n            trail.duration = 0;\n            trail.distance = 0;\n            trail.uphill = 0;\n            trail.downhill = 0;\n            trail.tools = [];\n            trail.relatedArticles = [];\n            trail.labels = [];\n            geojson = {\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: [[lngLatSelected.lng, lngLatSelected.lat]]\n                }\n              }]\n            };\n            trail.geoJSON = JSON.stringify(geojson);\n            _context2.next = 21;\n            return _services_API__WEBPACK_IMPORTED_MODULE_6__[\"default\"].CreateMarker('POST', '/api/trail/create', _user_data, trail, true);\n          case 21:\n            response = _context2.sent;\n            console.log(response);\n            setIsModalOpen(false);\n            router.reload();\n            _context2.next = 32;\n            break;\n          case 27:\n            _context2.prev = 27;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            setIsModalOpen(false);\n            router.reload();\n          case 32:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 27]]);\n    }));\n    return function handleOk() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleCancel = function handleCancel() {\n    setIsModalOpen(false);\n  };\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    var user_data = _services_UserDataService__WEBPACK_IMPORTED_MODULE_8__[\"default\"].get();\n    loadMarker();\n    if (map.current && markersLoaded == true) return;\n    map.current = new mapbox_gl__WEBPACK_IMPORTED_MODULE_7___default.a.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.current.addControl(new mapbox_gl__WEBPACK_IMPORTED_MODULE_7___default.a.NavigationControl(), 'top-right');\n    map.current.addControl(new mapbox_gl__WEBPACK_IMPORTED_MODULE_7___default.a.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    }));\n    function fetchGeoJSON() {\n      return _fetchGeoJSON.apply(this, arguments);\n    }\n    function _fetchGeoJSON() {\n      _fetchGeoJSON = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var result, user_data2, response, trails;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              result = [];\n              user_data2 = _services_UserDataService__WEBPACK_IMPORTED_MODULE_8__[\"default\"].get();\n              _context3.next = 5;\n              return _services_API__WEBPACK_IMPORTED_MODULE_6__[\"default\"].send('POST', \"/api/trail/retrieve\", user_data2, true);\n            case 5:\n              response = _context3.sent;\n              trails = response.data.trails;\n              console.log(trails);\n              console.log(response);\n              trails.map(function (item) {\n                var tmp = JSON.parse(item.geoJSON);\n                console.log(tmp);\n                if (typeof tmp.features !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0].geometry.coordinates[0] !== 'undefined') {\n                  result.push(tmp.features[0].geometry.coordinates[0]);\n                } else {\n                  //result.push(tmp.features.geometry.coordinates);\n                }\n              });\n              console.log(result);\n              return _context3.abrupt(\"return\", result);\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error fetching GeoJSON:', _context3.t0);\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 14]]);\n      }));\n      return _fetchGeoJSON.apply(this, arguments);\n    }\n    function loadMarker() {\n      return _loadMarker.apply(this, arguments);\n    }\n    function _loadMarker() {\n      _loadMarker = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var markers, geojson;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetchGeoJSON(user_data);\n            case 2:\n              markers = _context4.sent;\n              geojson = {\n                type: 'Feature',\n                features: markers === null || markers === void 0 ? void 0 : markers.map(function (marker) {\n                  return {\n                    geometry: {\n                      type: 'Point',\n                      coordinates: {\n                        lat: marker[1],\n                        lng: marker[0]\n                      }\n                    }\n                  };\n                })\n              };\n              map.current.on('load', function () {\n                var _geojson$features;\n                geojson === null || geojson === void 0 ? void 0 : (_geojson$features = geojson.features) === null || _geojson$features === void 0 ? void 0 : _geojson$features.forEach(function (marker) {\n                  // create a DOM element for the marker\n                  var markerIcon = document.createElement('div');\n                  markerIcon.className = 'location-marker';\n                  markerIcon.style.backgroundImage = 'url(/custom-marker.png)';\n                  markerIcon.style.width = '60px';\n                  markerIcon.style.height = '90px';\n                  new mapbox_gl__WEBPACK_IMPORTED_MODULE_7___default.a.Marker(markerIcon).setLngLat(marker.geometry.coordinates).addTo(map.current);\n                  markerIcon.addEventListener('click', function () {\n                    console.dir('marker :' + JSON.stringify(marker.geometry.coordinates));\n                    setselectedMarker(marker.geometry.coordinates);\n                    setIsModalOpenUpdate(true);\n                  });\n                });\n              });\n              setMarkersLoaded(true);\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return _loadMarker.apply(this, arguments);\n    }\n    map.current.on('contextmenu', function (e) {\n      e.preventDefault();\n      var lngLat = e.lngLat;\n      setlngLatSelected(lngLat);\n      console.log('Right-clicked at:', lngLat);\n      setIsModalOpen(true);\n    });\n    //map.current.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    //return () => { map.current.remove()};\n  });\n\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(_components_Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n      id: \"855806535\",\n      children: \".map-container.jsx-855806535{position:absolute;width:100%;height:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/draki/Documents/Epitech/EIP/dashboard/admin/pages/control/index.js */\"\n    }, void 0, false, void 0, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(\"div\", {\n      ref: mapContainer,\n      className: \"jsx-855806535\" + \" \" + \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(antd__WEBPACK_IMPORTED_MODULE_11__[\"Modal\"], {\n      title: \"Ajout de marqueur\",\n      open: isModalOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(\"p\", {\n        className: \"jsx-855806535\",\n        children: \"Voulez vous ajouter un marqueur \\xE0 l'emplacement : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(\"p\", {\n        className: \"jsx-855806535\",\n        children: [\"longitude : \", lngLatSelected.lng, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(\"p\", {\n        className: \"jsx-855806535\",\n        children: [\"latitude: \", lngLatSelected.lat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(antd__WEBPACK_IMPORTED_MODULE_11__[\"Modal\"], {\n      title: \"Modification du marqueur\",\n      open: isModalOpenUpdate,\n      onOk: handleOkUpdate,\n      onCancel: handleCancelUpdate,\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(\"p\", {\n        className: \"jsx-855806535\",\n        children: \"Addresse : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(_components_SearchBar__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n        childState: parentState,\n        updateParentState: updateParentState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(\"p\", {\n        className: \"jsx-855806535\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__[\"jsxDEV\"])(antd__WEBPACK_IMPORTED_MODULE_11__[\"Button\"], {\n        type: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 9\n  }, this);\n}\n_s(Control, \"a+zy1G7GI0Iv8X8fXvbTpVDL9xQ=\", false, function () {\n  return [next_router__WEBPACK_IMPORTED_MODULE_4__[\"useRouter\"]];\n});\n_c = Control;\nvar _c;\n$RefreshReg$(_c, \"Control\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvY29udHJvbC9pbmRleC5qcz82NGYxIl0sIm5hbWVzIjpbIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJlIiwidCIsInIiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJuIiwiaGFzT3duUHJvcGVydHkiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImkiLCJTeW1ib2wiLCJhIiwiaXRlcmF0b3IiLCJjIiwiYXN5bmNJdGVyYXRvciIsInUiLCJ0b1N0cmluZ1RhZyIsImRlZmluZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIndyYXAiLCJHZW5lcmF0b3IiLCJjcmVhdGUiLCJDb250ZXh0IiwibWFrZUludm9rZU1ldGhvZCIsInRyeUNhdGNoIiwidHlwZSIsImFyZyIsImNhbGwiLCJoIiwibCIsImYiLCJzIiwieSIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJwIiwiZCIsImdldFByb3RvdHlwZU9mIiwidiIsInZhbHVlcyIsImciLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJmb3JFYWNoIiwiX2ludm9rZSIsIkFzeW5jSXRlcmF0b3IiLCJpbnZva2UiLCJyZXNvbHZlIiwiX19hd2FpdCIsInRoZW4iLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsIkVycm9yIiwiZG9uZSIsIm1ldGhvZCIsImRlbGVnYXRlIiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwiVHlwZUVycm9yIiwicmVzdWx0TmFtZSIsIm5leHQiLCJuZXh0TG9jIiwicHVzaFRyeUVudHJ5IiwidHJ5TG9jIiwiY2F0Y2hMb2MiLCJmaW5hbGx5TG9jIiwiYWZ0ZXJMb2MiLCJ0cnlFbnRyaWVzIiwicHVzaCIsInJlc2V0VHJ5RW50cnkiLCJjb21wbGV0aW9uIiwicmVzZXQiLCJpc05hTiIsImxlbmd0aCIsImRpc3BsYXlOYW1lIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm1hcmsiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImF3cmFwIiwiYXN5bmMiLCJQcm9taXNlIiwia2V5cyIsInJldmVyc2UiLCJwb3AiLCJwcmV2IiwiY2hhckF0Iiwic2xpY2UiLCJzdG9wIiwicnZhbCIsImhhbmRsZSIsImNvbXBsZXRlIiwiZmluaXNoIiwiX2NhdGNoIiwiZGVsZWdhdGVZaWVsZCIsIm1hcGJveGdsIiwiYWNjZXNzVG9rZW4iLCJDb250cm9sIiwiYWNjZXNzX3Rva2VuIiwidXNlcl9kYXRhIiwiX3MiLCJyb3V0ZXIiLCJ1c2VSb3V0ZXIiLCJfdXNlU3RhdGUiLCJ1c2VTdGF0ZSIsIm5ld2xhdCIsInNldG5ld2xhdCIsIl91c2VTdGF0ZTIiLCJuZXdsZ24iLCJzZXRuZXdsZ24iLCJfdXNlU3RhdGUzIiwiYWRkcmVzcyIsInNldGFkZHJlc3MiLCJfdXNlU3RhdGU0IiwiaW5wdXQiLCJzZXRJbnB1dCIsIl91c2VTdGF0ZTUiLCJyZXN1bHRzZWFyY2giLCJzZXRyZXN1bHRzZWFyY2giLCJfdXNlU3RhdGU2Iiwic2VsZWN0ZWRNYXJrZXIiLCJzZXRzZWxlY3RlZE1hcmtlciIsIl91c2VTdGF0ZTciLCJwYXJlbnRTdGF0ZSIsInNldFBhcmVudFN0YXRlIiwiX3VzZVN0YXRlOCIsIlRyYWlscyIsInNldFRyYWlscyIsIl91c2VTdGF0ZTkiLCJsbmdMYXRTZWxlY3RlZCIsInNldGxuZ0xhdFNlbGVjdGVkIiwiX3VzZVN0YXRlMTAiLCJtYXJrZXJzTG9hZGVkIiwic2V0TWFya2Vyc0xvYWRlZCIsIl91c2VTdGF0ZTExIiwidXNlcm5hbWUiLCJzZXRJbnB1dFZhbHVlVXNlcm5hbWUiLCJfdXNlU3RhdGUxMiIsImVtYWlsIiwic2V0SW5wdXRWYWx1ZUVtYWlsIiwiX3VzZVN0YXRlMTMiLCJsbmciLCJzZXRMbmciLCJfdXNlU3RhdGUxNCIsImxhdCIsInNldExhdCIsIl91c2VTdGF0ZTE1Iiwiem9vbSIsInNldFpvb20iLCJtYXAiLCJ1c2VSZWYiLCJtYXBDb250YWluZXIiLCJfdXNlU3RhdGUxNiIsImlzTW9kYWxPcGVuIiwic2V0SXNNb2RhbE9wZW4iLCJfdXNlU3RhdGUxNyIsImlzTW9kYWxPcGVuVXBkYXRlIiwic2V0SXNNb2RhbE9wZW5VcGRhdGUiLCJzaG93TW9kYVVwZGF0ZSIsImhhbmRsZU9rVXBkYXRlIiwiaGFuZGxlQ2FuY2VsVXBkYXRlIiwic2hvd01vZGFsIiwiaGFuZGxlU3VibWl0IiwiX3JlZiIsIl9hc3luY1RvR2VuZXJhdG9yIiwiX2NhbGxlZSIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJ1cGRhdGVNYXJrZXIiLCJhcHBseSIsImFyZ3VtZW50cyIsInVwZGF0ZVBhcmVudFN0YXRlIiwibmV3U3RhdGUiLCJjb25zb2xlIiwibG9nIiwiZmV0Y2hUcmFpbHMiLCJfZmV0Y2hUcmFpbHMiLCJfY2FsbGVlNSIsIl91c2VyX2RhdGEyIiwicmVzcG9uc2UiLCJ0cmFpbHMiLCJfY2FsbGVlNSQiLCJfY29udGV4dDUiLCJVc2VyRGF0YVNlcnZpY2UiLCJnZXQiLCJBUEkiLCJkYXRhIiwidDAiLCJlcnJvciIsImdldE1hcmtlciIsIl94IiwiX2dldE1hcmtlciIsIl9jYWxsZWU2IiwidG1wIiwiX2NhbGxlZTYkIiwiX2NvbnRleHQ2IiwiZGlyIiwiSlNPTiIsInBhcnNlIiwiZ2VvSlNPTiIsImZlYXR1cmVzIiwiZ2VvbWV0cnkiLCJjb29yZGluYXRlcyIsImZldGNoQ29vcmRpbmF0ZXMiLCJfZmV0Y2hDb29yZGluYXRlcyIsIl9jYWxsZWU3IiwiX2RhdGEkZmVhdHVyZXMkMCRjZW50IiwibG9uZ2l0dWRlIiwibGF0aXR1ZGUiLCJfY2FsbGVlNyQiLCJfY29udGV4dDciLCJmZXRjaCIsImNvbmNhdCIsIm9rIiwianNvbiIsInN0cmluZ2lmeSIsImNlbnRlciIsIl9zbGljZWRUb0FycmF5Iiwic3RhdHVzVGV4dCIsIl94MiIsIl91cGRhdGVNYXJrZXIiLCJfY2FsbGVlOCIsImluZGV4IiwicmVzdWx0IiwiX2NhbGxlZTgkIiwiX2NvbnRleHQ4IiwiaWQiLCJDcmVhdGVNYXJrZXIiLCJyZWxvYWQiLCJoYW5kbGVPayIsIl9yZWYyIiwiX2NhbGxlZTIiLCJfdXNlcl9kYXRhIiwidHJhaWwiLCJnZW9qc29uIiwiX2NhbGxlZTIkIiwiX2NvbnRleHQyIiwiZGVzY3JpcHRpb24iLCJwaWN0dXJlcyIsImRpZmZpY3VsdHkiLCJkdXJhdGlvbiIsImRpc3RhbmNlIiwidXBoaWxsIiwiZG93bmhpbGwiLCJ0b29scyIsInJlbGF0ZWRBcnRpY2xlcyIsImxhYmVscyIsInByb3BlcnRpZXMiLCJoYW5kbGVDYW5jZWwiLCJ1c2VFZmZlY3QiLCJsb2FkTWFya2VyIiwiY3VycmVudCIsIk1hcCIsImNvbnRhaW5lciIsInN0eWxlIiwiYWRkQ29udHJvbCIsIk5hdmlnYXRpb25Db250cm9sIiwiR2VvbG9jYXRlQ29udHJvbCIsInBvc2l0aW9uT3B0aW9ucyIsImVuYWJsZUhpZ2hBY2N1cmFjeSIsInRyYWNrVXNlckxvY2F0aW9uIiwiZmV0Y2hHZW9KU09OIiwiX2ZldGNoR2VvSlNPTiIsIl9jYWxsZWUzIiwidXNlcl9kYXRhMiIsIl9jYWxsZWUzJCIsIl9jb250ZXh0MyIsInNlbmQiLCJpdGVtIiwiX2xvYWRNYXJrZXIiLCJfY2FsbGVlNCIsIm1hcmtlcnMiLCJfY2FsbGVlNCQiLCJfY29udGV4dDQiLCJtYXJrZXIiLCJvbiIsIl9nZW9qc29uJGZlYXR1cmVzIiwibWFya2VySWNvbiIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsImJhY2tncm91bmRJbWFnZSIsIndpZHRoIiwiaGVpZ2h0IiwiTWFya2VyIiwic2V0TG5nTGF0IiwiYWRkVG8iLCJhZGRFdmVudExpc3RlbmVyIiwicHJldmVudERlZmF1bHQiLCJsbmdMYXQiLCJfanN4REVWIiwiTGF5b3V0IiwiY2hpbGRyZW4iLCJfSlNYU3R5bGUiLCJyZWYiLCJmaWxlTmFtZSIsIl9qc3hGaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJjb2x1bW5OdW1iZXIiLCJNb2RhbCIsInRpdGxlIiwib3BlbiIsIm9uT2siLCJvbkNhbmNlbCIsIlNlYXJjaEJhciIsImNoaWxkU3RhdGUiLCJCdXR0b24iLCJvbkNsaWNrIiwiX2MiLCIkUmVmcmVzaFJlZyQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytDQUNBLHFKQUFBQSxtQkFBQSxZQUFBQSxvQkFBQSxXQUFBQyxDQUFBLFNBQUFDLENBQUEsRUFBQUQsQ0FBQSxPQUFBRSxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsU0FBQSxFQUFBQyxDQUFBLEdBQUFILENBQUEsQ0FBQUksY0FBQSxFQUFBQyxDQUFBLEdBQUFKLE1BQUEsQ0FBQUssY0FBQSxjQUFBUCxDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxJQUFBRCxDQUFBLENBQUFELENBQUEsSUFBQUUsQ0FBQSxDQUFBTyxLQUFBLEtBQUFDLENBQUEsd0JBQUFDLE1BQUEsR0FBQUEsTUFBQSxPQUFBQyxDQUFBLEdBQUFGLENBQUEsQ0FBQUcsUUFBQSxrQkFBQUMsQ0FBQSxHQUFBSixDQUFBLENBQUFLLGFBQUEsdUJBQUFDLENBQUEsR0FBQU4sQ0FBQSxDQUFBTyxXQUFBLDhCQUFBQyxPQUFBakIsQ0FBQSxFQUFBRCxDQUFBLEVBQUFFLENBQUEsV0FBQUMsTUFBQSxDQUFBSyxjQUFBLENBQUFQLENBQUEsRUFBQUQsQ0FBQSxJQUFBUyxLQUFBLEVBQUFQLENBQUEsRUFBQWlCLFVBQUEsTUFBQUMsWUFBQSxNQUFBQyxRQUFBLFNBQUFwQixDQUFBLENBQUFELENBQUEsV0FBQWtCLE1BQUEsbUJBQUFqQixDQUFBLElBQUFpQixNQUFBLFlBQUFBLE9BQUFqQixDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxXQUFBRCxDQUFBLENBQUFELENBQUEsSUFBQUUsQ0FBQSxnQkFBQW9CLEtBQUFyQixDQUFBLEVBQUFELENBQUEsRUFBQUUsQ0FBQSxFQUFBRyxDQUFBLFFBQUFLLENBQUEsR0FBQVYsQ0FBQSxJQUFBQSxDQUFBLENBQUFJ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dCBSZWFjdCwgeyB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBBUEkgZnJvbSAnLi4vLi4vc2VydmljZXMvQVBJJztcbmltcG9ydCBtYXBib3hnbCwgeyBhY2Nlc3NUb2tlbiB9IGZyb20gXCJtYXBib3gtZ2xcIjtcbmltcG9ydCBVc2VyRGF0YVNlcnZpY2UgZnJvbSBcIi4uLy4uL3NlcnZpY2VzL1VzZXJEYXRhU2VydmljZVwiO1xuaW1wb3J0IFNlYXJjaEJhciBmcm9tICcuLi8uLi9jb21wb25lbnRzL1NlYXJjaEJhcic7XG5pbXBvcnQgJ21hcGJveC1nbC9kaXN0L21hcGJveC1nbC5jc3MnO1xuaW1wb3J0IHsgQnV0dG9uLCBNb2RhbCwgSW5wdXQgfSBmcm9tICdhbnRkJztcbm1hcGJveGdsLmFjY2Vzc1Rva2VuID0gJ3BrLmV5SjFJam9pYUdsalkzVndMWE4wWVdabUlpd2lZU0k2SW1Oc2FuZ3hlSFZrYnpBeU5td3pkSEo0Y21KaVlXWm1NbTRpZlEueUk0MjU5amxNcTJlbERpVF91SzFrZyc7XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29udHJvbCAoYWNjZXNzX3Rva2VuLCB1c2VyX2RhdGEpIHtcbiAgICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgICBjb25zdCBbbmV3bGF0LCBzZXRuZXdsYXRdID0gdXNlU3RhdGUoMC4wKTtcbiAgICBjb25zdCBbbmV3bGduLCBzZXRuZXdsZ25dID0gIHVzZVN0YXRlKDAuMCk7XG4gICAgY29uc3QgW2FkZHJlc3MsIHNldGFkZHJlc3NdID0gIHVzZVN0YXRlKCcnKTtcbiAgICBjb25zdCBbaW5wdXQsIHNldElucHV0XSA9IHVzZVN0YXRlKCcnKTtcbiAgICBjb25zdCBbcmVzdWx0c2VhcmNoLCBzZXRyZXN1bHRzZWFyY2hdID0gdXNlU3RhdGUoW10pO1xuICAgIGNvbnN0IFtzZWxlY3RlZE1hcmtlciwgc2V0c2VsZWN0ZWRNYXJrZXJdID0gdXNlU3RhdGUoJycpO1xuICAgIGNvbnN0IFtwYXJlbnRTdGF0ZSwgc2V0UGFyZW50U3RhdGVdID0gdXNlU3RhdGUoJ0luaXRpYWwgVmFsdWUnKTtcbiAgICBjb25zdCBbVHJhaWxzLCBzZXRUcmFpbHNdID0gdXNlU3RhdGUoW10pO1xuICAgIGNvbnN0IFtsbmdMYXRTZWxlY3RlZCwgc2V0bG5nTGF0U2VsZWN0ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFttYXJrZXJzTG9hZGVkLCBzZXRNYXJrZXJzTG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAgIGNvbnN0IFt1c2VybmFtZSwgc2V0SW5wdXRWYWx1ZVVzZXJuYW1lXSA9IHVzZVN0YXRlKCcnKTtcbiAgICBjb25zdCBbZW1haWwsIHNldElucHV0VmFsdWVFbWFpbF0gPSB1c2VTdGF0ZSgnJyk7XG5cbiAgICBjb25zdCBbbG5nLCBzZXRMbmddID0gdXNlU3RhdGUoMi4zNSk7XG4gICAgY29uc3QgW2xhdCwgc2V0TGF0XSA9IHVzZVN0YXRlKDQ4Ljg1KTtcbiAgICBjb25zdCBbem9vbSwgc2V0Wm9vbV0gPSB1c2VTdGF0ZSg1KTtcbiAgICBjb25zdCBtYXAgPSB1c2VSZWYobnVsbCk7XG4gICAgY29uc3QgbWFwQ29udGFpbmVyID0gdXNlUmVmKG51bGwpO1xuXG4gICAgY29uc3QgW2lzTW9kYWxPcGVuLCBzZXRJc01vZGFsT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW2lzTW9kYWxPcGVuVXBkYXRlLCBzZXRJc01vZGFsT3BlblVwZGF0ZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgICBjb25zdCBzaG93TW9kYVVwZGF0ZSA9ICgpID0+IHtcbiAgICAgIHNldElzTW9kYWxPcGVuVXBkYXRlKHRydWUpO1xuICAgIH07XG4gICAgXG4gICAgY29uc3QgaGFuZGxlT2tVcGRhdGUgPSAoKSA9PiB7XG4gICAgICBzZXRJc01vZGFsT3BlblVwZGF0ZShmYWxzZSk7XG4gICAgfTtcblxuICAgIGNvbnN0IGhhbmRsZUNhbmNlbFVwZGF0ZSA9ICgpID0+IHtcbiAgICAgIHNldElzTW9kYWxPcGVuVXBkYXRlKGZhbHNlKTtcbiAgICB9O1xuXG4gICAgY29uc3Qgc2hvd01vZGFsID0gKCkgPT4ge1xuICAgICAgc2V0SXNNb2RhbE9wZW4odHJ1ZSk7XG4gICAgfTtcblxuICAgIGNvbnN0IGhhbmRsZVN1Ym1pdCA9IGFzeW5jICgpID0+IHtcbiAgICAgIHVwZGF0ZU1hcmtlcihzZWxlY3RlZE1hcmtlcik7XG4gICAgfVxuXG5cbiAgICBjb25zdCB1cGRhdGVQYXJlbnRTdGF0ZSA9IChuZXdTdGF0ZSkgPT4ge1xuICAgICAgc2V0UGFyZW50U3RhdGUobmV3U3RhdGUpO1xuICAgICAgc2V0YWRkcmVzcyhuZXdTdGF0ZSk7XG4gICAgICBjb25zb2xlLmxvZyhuZXdTdGF0ZSk7XG4gICAgfVxuXG4gICAgYXN5bmMgZnVuY3Rpb24gZmV0Y2hUcmFpbHMoKSB7XG4gICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHVzZXJfZGF0YSA9IFVzZXJEYXRhU2VydmljZS5nZXQoKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyh1c2VyX2RhdGEpO1xuICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgQVBJLmZldGNoVHJhaWxzKFwiUE9TVFwiLCAnL2FwaS90cmFpbC9yZXRyaWV2ZScsIHVzZXJfZGF0YSwgdHJ1ZSk7XG4gICAgICAgICAgICBsZXQgdHJhaWxzID0gcmVzcG9uc2UuZGF0YS50cmFpbHM7XG4gICAgICAgICAgICByZXR1cm4gdHJhaWxzO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgVHJhaWxzOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGZ1bmN0aW9uIGdldE1hcmtlcihzZWxlY3RlZE1hcmtlcikge1xuICAgICAgY29uc29sZS5sb2coJ2dldE1hcmtlcicpO1xuICAgICAgbGV0IHRyYWlscyA9IGF3YWl0IGZldGNoVHJhaWxzKCk7XG4gICAgICBjb25zb2xlLmRpcih0cmFpbHMpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0cmFpbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbGV0IHRtcCA9IEpTT04ucGFyc2UodHJhaWxzW2ldLmdlb0pTT04pO1xuICAgICAgICBjb25zb2xlLmxvZygnc2VsZWN0ZWRNQXJrZXIgOicpO1xuICAgICAgICBjb25zb2xlLmRpcihzZWxlY3RlZE1hcmtlcik7XG4gICAgICAgIGlmICh0eXBlb2YgdG1wLmZlYXR1cmVzICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgdG1wLmZlYXR1cmVzWzBdICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgdG1wLmZlYXR1cmVzWzBdLmdlb21ldHJ5ICE9PSAndW5kZWZpbmVkJyAgJiYgdHlwZW9mIHRtcC5mZWF0dXJlc1swXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXSAhPT0gJ3VuZGVmaW5lZCcpIHsgXG4gICAgICAgICAgaWYgKHRtcC5mZWF0dXJlc1swXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXVswXSA9PT0gc2VsZWN0ZWRNYXJrZXIubG5nICYmIHRtcC5mZWF0dXJlc1swXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXVsxXSA9PT0gc2VsZWN0ZWRNYXJrZXIubGF0KSB7XG4gICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBhc3luYyBmdW5jdGlvbiBmZXRjaENvb3JkaW5hdGVzKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICBgaHR0cHM6Ly9hcGkubWFwYm94LmNvbS9nZW9jb2RpbmcvdjUvbWFwYm94LnBsYWNlcy8ke2FkZHJlc3N9Lmpzb24/YWNjZXNzX3Rva2VuPSR7bWFwYm94Z2wuYWNjZXNzVG9rZW59YFxuICAgICAgICApO1xuICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2UgOiBcIiArIEpTT04uc3RyaW5naWZ5KGRhdGEuZmVhdHVyZXNbMF0uY2VudGVyKSk7XG4gICAgICAgICAgY29uc3QgW2xvbmdpdHVkZSwgbGF0aXR1ZGVdID0gZGF0YS5mZWF0dXJlc1swXS5jZW50ZXI7XG4gICAgICAgICAgc2V0bmV3bGduKGRhdGEuZmVhdHVyZXNbMF0uY2VudGVyWzBdKTtcbiAgICAgICAgICBzZXRuZXdsYXQoZGF0YS5mZWF0dXJlc1swXS5jZW50ZXJbMV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGNvb3JkaW5hdGVzOicsIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjonLCBlcnJvcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgYXN5bmMgZnVuY3Rpb24gdXBkYXRlTWFya2VyKHNlbGVjdGVkTWFya2VyKSB7XG4gICAgICBsZXQgaW5kZXggPSBhd2FpdCBnZXRNYXJrZXIoc2VsZWN0ZWRNYXJrZXIpO1xuICAgICAgY29uc29sZS5kaXIoaW5kZXgpO1xuICAgICAgbGV0IGRhdGEgPSB7fTtcbiAgICAgIGxldCB0cmFpbHMgPSBhd2FpdCBmZXRjaFRyYWlscyh1c2VyX2RhdGEpO1xuICAgICAgbGV0IHRtcCA9IEpTT04ucGFyc2UodHJhaWxzW2luZGV4XS5nZW9KU09OKTtcbiAgICAgIGNvbnNvbGUubG9nKCd0bXA6Jyk7XG4gICAgICBjb25zb2xlLmRpcihkYXRhLmxhdGl0dWRlKTtcbiAgICAgIGRhdGEuaWQgPSB0cmFpbHNbaW5kZXhdLmlkO1xuICAgICAgZGF0YS5sYXRpdHVkZSA9IG5ld2xhdDtcbiAgICAgIGRhdGEubG9uZ2l0dWRlID0gbmV3bGduO1xuICAgICAgY29uc29sZS5sb2codHlwZW9mIHRtcC5mZWF0dXJlc1swXSk7XG4gICAgICBjb25zb2xlLmxvZyhcImZldGNoQ29vcmRpbmF0ZXMgOiBcIiArIG5ld2xhdCArIFwiIFwiICsgbmV3bGduKTtcbiAgICAgIGF3YWl0IGZldGNoQ29vcmRpbmF0ZXMoKTtcbiAgICAgIHRtcC5mZWF0dXJlc1swXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXVswXSA9IG5ld2xnbjtcbiAgICAgIHRtcC5mZWF0dXJlc1swXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXVsxXSA9IG5ld2xhdDtcbiAgICAgIGNvbnNvbGUubG9nKCd0bXAnKTtcbiAgICAgIGNvbnNvbGUuZGlyKHRtcCk7XG4gICAgICBkYXRhLmdlb0pTT04gPSBKU09OLnN0cmluZ2lmeSh0bXApO1xuICAgICAgY29uc29sZS5sb2coJ2hlcmUnKTtcbiAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgY29uc3QgdXNlcl9kYXRhID0gVXNlckRhdGFTZXJ2aWNlLmdldCgpO1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBBUEkuQ3JlYXRlTWFya2VyKCdQVVQnLCAnL2FwaS90cmFpbC91cGRhdGUnLCB1c2VyX2RhdGEsIGRhdGEsIHRydWUpO1xuICAgICAgbGV0IHJlc3VsdCA9IHJlc3BvbnNlLmRhdGEudHJhaWxzO1xuICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgIHNldElzTW9kYWxPcGVuVXBkYXRlKGZhbHNlKTtcbiAgICAgIHJvdXRlci5yZWxvYWQoKTtcbiAgICB9XG5cbiAgICBjb25zdCBoYW5kbGVPayA9IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHVzZXJfZGF0YSA9IFVzZXJEYXRhU2VydmljZS5nZXQoKTtcbiAgICAgICAgbGV0IHRyYWlsID0ge307XG4gICAgICAgIHRyYWlsLm5hbWUgPSBcIkFkZGVkIGJ5IGFkbWluIGluIGRhc2hib2FyZFwiO1xuICAgICAgICB0cmFpbC5hZGRyZXNzID0gXCJBZGRlZCBieSBhZG1pbiBpbiBkYXNoYm9hcmRcIjtcbiAgICAgICAgdHJhaWwuZGVzY3JpcHRpb24gPSBcIkFkZGVkIGJ5IGFkbWluIGluIGRhc2hib2FyZFwiO1xuICAgICAgICB0cmFpbC5waWN0dXJlcyA9IFtcImh0dHBzOi8vZ29vZ2xlLmNvbVwiXTtcbiAgICAgICAgdHJhaWwubGF0aXR1ZGUgPSBsbmdMYXRTZWxlY3RlZC5sYXQ7XG4gICAgICAgIHRyYWlsLmxvbmdpdHVkZSA9IGxuZ0xhdFNlbGVjdGVkLmxuZztcbiAgICAgICAgdHJhaWwuZGlmZmljdWx0eSA9IDA7XG4gICAgICAgIHRyYWlsLmR1cmF0aW9uID0gMDtcbiAgICAgICAgdHJhaWwuZGlzdGFuY2UgPSAwO1xuICAgICAgICB0cmFpbC51cGhpbGwgPSAwO1xuICAgICAgICB0cmFpbC5kb3duaGlsbCA9IDA7XG4gICAgICAgIHRyYWlsLnRvb2xzID0gW107XG4gICAgICAgIHRyYWlsLnJlbGF0ZWRBcnRpY2xlcyA9IFtdO1xuICAgICAgICB0cmFpbC5sYWJlbHMgPSBbXTtcbiAgICAgICAgbGV0IGdlb2pzb24gPSB7XG4gICAgICAgICAgZmVhdHVyZXM6IFt7XG4gICAgICAgICAgICB0eXBlOiAnRmVhdHVyZScsXG4gICAgICAgICAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICAgICAgICAgIGdlb21ldHJ5OiB7XG4gICAgICAgICAgICAgIHR5cGU6ICdQb2ludCcsXG4gICAgICAgICAgICAgIGNvb3JkaW5hdGVzOiBbW1xuICAgICAgICAgICAgICAgIGxuZ0xhdFNlbGVjdGVkLmxuZyxcbiAgICAgICAgICAgICAgICBsbmdMYXRTZWxlY3RlZC5sYXRcbiAgICAgICAgICAgICAgXV19fV19XG4gICAgICAgIHRyYWlsLmdlb0pTT04gPSBKU09OLnN0cmluZ2lmeShnZW9qc29uKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBBUEkuQ3JlYXRlTWFya2VyKCdQT1NUJywgJy9hcGkvdHJhaWwvY3JlYXRlJywgdXNlcl9kYXRhLCB0cmFpbCwgdHJ1ZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgc2V0SXNNb2RhbE9wZW4oZmFsc2UpO1xuICAgICAgICByb3V0ZXIucmVsb2FkKCk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgIHNldElzTW9kYWxPcGVuKGZhbHNlKTtcbiAgICAgICAgcm91dGVyLnJlbG9hZCgpO1xuICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgaGFuZGxlQ2FuY2VsID0gKCkgPT4ge1xuICAgICAgc2V0SXNNb2RhbE9wZW4oZmFsc2UpO1xuICAgIH07XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCB1c2VyX2RhdGEgPSBVc2VyRGF0YVNlcnZpY2UuZ2V0KCk7XG4gICAgICAgIGxvYWRNYXJrZXIoKTtcbiAgICAgICAgaWYgKG1hcC5jdXJyZW50ICYmIG1hcmtlcnNMb2FkZWQgPT0gdHJ1ZSApIHJldHVybjtcbiAgICAgICAgbWFwLmN1cnJlbnQgPSBuZXcgbWFwYm94Z2wuTWFwKHtcbiAgICAgICAgY29udGFpbmVyOiBtYXBDb250YWluZXIuY3VycmVudCxcbiAgICAgICAgc3R5bGU6ICdtYXBib3g6Ly9zdHlsZXMvbWFwYm94L3N0cmVldHMtdjEyJyxcbiAgICAgICAgY2VudGVyOiBbbG5nLCBsYXRdLFxuICAgICAgICB6b29tOiB6b29tXG4gICAgICAgIH0pO1xuICAgICAgICBtYXAuY3VycmVudC5hZGRDb250cm9sKG5ldyBtYXBib3hnbC5OYXZpZ2F0aW9uQ29udHJvbCgpLCAndG9wLXJpZ2h0Jyk7XG4gICAgICAgIG1hcC5jdXJyZW50LmFkZENvbnRyb2woXG4gICAgICAgICAgbmV3IG1hcGJveGdsLkdlb2xvY2F0ZUNvbnRyb2woe1xuICAgICAgICAgICAgcG9zaXRpb25PcHRpb25zOiB7XG4gICAgICAgICAgICAgIGVuYWJsZUhpZ2hBY2N1cmFjeTogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRyYWNrVXNlckxvY2F0aW9uOiB0cnVlXG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcblxuICAgICAgICBhc3luYyBmdW5jdGlvbiBmZXRjaEdlb0pTT04oKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICAgICAgICBjb25zdCB1c2VyX2RhdGEyID0gVXNlckRhdGFTZXJ2aWNlLmdldCgpO1xuICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IEFQSS5zZW5kKCdQT1NUJywgXCIvYXBpL3RyYWlsL3JldHJpZXZlXCIsIHVzZXJfZGF0YTIsIHRydWUpO1xuICAgICAgICAgICAgICAgIGxldCB0cmFpbHMgPSByZXNwb25zZS5kYXRhLnRyYWlscztcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0cmFpbHMpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB0cmFpbHMubWFwKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICBsZXQgdG1wID0gSlNPTi5wYXJzZShpdGVtLmdlb0pTT04pO1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codG1wKTtcbiAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdG1wLmZlYXR1cmVzICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgdG1wLmZlYXR1cmVzWzBdICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgdG1wLmZlYXR1cmVzWzBdICE9PSAgJ3VuZGVmaW5lZCcgICYmIHR5cGVvZiB0bXAuZmVhdHVyZXNbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0gIT09ICd1bmRlZmluZWQnICkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaCh0bXAuZmVhdHVyZXNbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0pO1xuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy9yZXN1bHQucHVzaCh0bXAuZmVhdHVyZXMuZ2VvbWV0cnkuY29vcmRpbmF0ZXMpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgR2VvSlNPTjonLCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBhc3luYyBmdW5jdGlvbiBsb2FkTWFya2VyKCkge1xuICAgICAgICAgIGxldCBtYXJrZXJzID0gYXdhaXQgZmV0Y2hHZW9KU09OKHVzZXJfZGF0YSk7XG4gICAgICAgICAgbGV0IGdlb2pzb24gPSB7XG4gICAgICAgICAgICB0eXBlOiAnRmVhdHVyZScsXG4gICAgICAgICAgICBmZWF0dXJlczogbWFya2Vycz8ubWFwKChtYXJrZXIpID0+ICh7XG4gICAgICAgICAgICAgIGdlb21ldHJ5OiB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ1BvaW50JyxcbiAgICAgICAgICAgICAgICBjb29yZGluYXRlczoge1xuICAgICAgICAgICAgICAgICAgbGF0OiBtYXJrZXJbMV0sXG4gICAgICAgICAgICAgICAgICBsbmc6IG1hcmtlclswXVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpXG4gICAgICAgICAgfTtcbiAgICAgICAgICBtYXAuY3VycmVudC5vbignbG9hZCcsICgpID0+IHtcbiAgICAgICAgICAgIGdlb2pzb24/LmZlYXR1cmVzPy5mb3JFYWNoKChtYXJrZXIpID0+IHsgIC8vIGNyZWF0ZSBhIERPTSBlbGVtZW50IGZvciB0aGUgbWFya2VyXG4gICAgICAgICAgICBjb25zdCBtYXJrZXJJY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBtYXJrZXJJY29uLmNsYXNzTmFtZSA9ICdsb2NhdGlvbi1tYXJrZXInO1xuICAgICAgICAgICAgbWFya2VySWNvbi5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSAndXJsKC9jdXN0b20tbWFya2VyLnBuZyknO1xuICAgICAgICAgICAgbWFya2VySWNvbi5zdHlsZS53aWR0aCA9ICAnNjBweCc7XG4gICAgICAgICAgICBtYXJrZXJJY29uLnN0eWxlLmhlaWdodCA9ICc5MHB4JztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbmV3IG1hcGJveGdsLk1hcmtlcihtYXJrZXJJY29uKVxuICAgICAgICAgICAgICAuc2V0TG5nTGF0KG1hcmtlci5nZW9tZXRyeS5jb29yZGluYXRlcylcbiAgICAgICAgICAgICAgLmFkZFRvKG1hcC5jdXJyZW50KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICBtYXJrZXJJY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZGlyKCdtYXJrZXIgOicgKyBKU09OLnN0cmluZ2lmeShtYXJrZXIuZ2VvbWV0cnkuY29vcmRpbmF0ZXMpKTtcbiAgICAgICAgICAgICAgICBzZXRzZWxlY3RlZE1hcmtlcihtYXJrZXIuZ2VvbWV0cnkuY29vcmRpbmF0ZXMpO1xuICAgICAgICAgICAgICAgIHNldElzTW9kYWxPcGVuVXBkYXRlKHRydWUpO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHNldE1hcmtlcnNMb2FkZWQodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgbWFwLmN1cnJlbnQub24oJ2NvbnRleHRtZW51JywgKGUpID0+IHtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgY29uc3QgbG5nTGF0ID0gZS5sbmdMYXQ7XG4gICAgICAgICAgc2V0bG5nTGF0U2VsZWN0ZWQobG5nTGF0KTtcbiAgICAgICAgICBjb25zb2xlLmxvZygnUmlnaHQtY2xpY2tlZCBhdDonLCBsbmdMYXQpO1xuICAgICAgICAgIHNldElzTW9kYWxPcGVuKHRydWUpO1xuICAgICAgICB9KTtcbiAgICAgICAgICAvL21hcC5jdXJyZW50LmFkZENvbnRyb2wobmV3IG1hcGJveGdsLk5hdmlnYXRpb25Db250cm9sKCksIFwidG9wLXJpZ2h0XCIpO1xuICAgICAgICAgIC8vcmV0dXJuICgpID0+IHsgbWFwLmN1cnJlbnQucmVtb3ZlKCl9O1xuICAgICAgfSk7XG4gICAgICBcbiAgICByZXR1cm4gKFxuICAgICAgICA8TGF5b3V0PlxuICAgICAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAgICAgLm1hcC1jb250YWluZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHJlZj17bWFwQ29udGFpbmVyfSBjbGFzc05hbWU9XCJtYXAtY29udGFpbmVyXCIvPlxuICAgICAgICAgICAgICAgICAgICA8TW9kYWwgdGl0bGU9XCJBam91dCBkZSBtYXJxdWV1clwiIG9wZW49e2lzTW9kYWxPcGVufSBvbk9rPXtoYW5kbGVPa30gb25DYW5jZWw9e2hhbmRsZUNhbmNlbH0+XG4gICAgICAgICAgICAgICAgICAgIDxwPlZvdWxleiB2b3VzIGFqb3V0ZXIgdW4gbWFycXVldXIgw6AgbCdlbXBsYWNlbWVudCA6IDwvcD5cbiAgICAgICAgICAgICAgICAgICAgPHA+bG9uZ2l0dWRlIDoge2xuZ0xhdFNlbGVjdGVkLmxuZ30gPC9wPlxuICAgICAgICAgICAgICAgICAgICA8cD5sYXRpdHVkZToge2xuZ0xhdFNlbGVjdGVkLmxhdH08L3A+XG4gICAgICAgICAgICAgICAgICA8L01vZGFsPlxuICAgICAgICAgICAgICAgICAgPE1vZGFsIHRpdGxlPVwiTW9kaWZpY2F0aW9uIGR1IG1hcnF1ZXVyXCIgb3Blbj17aXNNb2RhbE9wZW5VcGRhdGV9IG9uT2s9e2hhbmRsZU9rVXBkYXRlfSBvbkNhbmNlbD17aGFuZGxlQ2FuY2VsVXBkYXRlfT5cbiAgICAgICAgICAgICAgICAgICAgPHA+QWRkcmVzc2UgOiA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxTZWFyY2hCYXIgY2hpbGRTdGF0ZT17cGFyZW50U3RhdGV9IHVwZGF0ZVBhcmVudFN0YXRlPXt1cGRhdGVQYXJlbnRTdGF0ZX0gLz5cbiAgICAgICAgICAgICAgICAgICAgPHA+PC9wPlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGtleT1cInN1Ym1pdFwiIHR5cGU9XCJwcmltYXJ5XCIgb25DbGljaz17aGFuZGxlU3VibWl0fT5cbiAgICAgICAgICAgICAgICAgICAgICBTdWJtaXRcbiAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvTW9kYWw+XG4gICAgICAgIDwvTGF5b3V0PlxuICAgICk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/control/index.js\n");

/***/ })

})