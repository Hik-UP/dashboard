webpackHotUpdate_N_E("pages/control",{

/***/ "./pages/control/index.js":
/*!********************************!*\
  !*** ./pages/control/index.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Control; });\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/Layout */ \"./components/Layout.js\");\n/* harmony import */ var _services_API__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/API */ \"./services/API.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! mapbox-gl */ \"./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _services_UserDataService__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/UserDataService */ \"./services/UserDataService.js\");\n/* harmony import */ var mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! mapbox-gl/dist/mapbox-gl.css */ \"./node_modules/mapbox-gl/dist/mapbox-gl.css\");\n/* harmony import */ var mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! antd */ \"./node_modules/antd/es/index.js\");\n\nvar _jsxFileName = \"/Users/draki/Documents/Epitech/EIP/dashboard/admin/pages/control/index.js\",\n  _s = $RefreshSig$();\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return { value: void 0, done: !0 }; } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable || \"\" === iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } throw new TypeError(typeof iterable + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\n\n\n\n\n\n\nmapbox_gl__WEBPACK_IMPORTED_MODULE_5___default.a.accessToken = 'pk.eyJ1IjoiaGljY3VwLXN0YWZmIiwiYSI6ImNsangxeHVkbzAyNmwzdHJ4cmJiYWZmMm4ifQ.yI4259jlMq2elDiT_uK1kg';\nfunction Control(access_token, user_data) {\n  _s();\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n    newlat = _useState[0],\n    setnewlat = _useState[1];\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(0),\n    newlgn = _useState2[0],\n    setnewlgn = _useState2[1];\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n    lngLatSelected = _useState3[0],\n    setlngLatSelected = _useState3[1];\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n    username = _useState4[0],\n    setInputValueUsername = _useState4[1];\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n    email = _useState5[0],\n    setInputValueEmail = _useState5[1];\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(2.35),\n    lng = _useState6[0],\n    setLng = _useState6[1];\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(48.85),\n    lat = _useState7[0],\n    setLat = _useState7[1];\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(5),\n    zoom = _useState8[0],\n    setZoom = _useState8[1];\n  var map = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useRef\"])(null);\n  var mapContainer = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useRef\"])(null);\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n    isModalOpen = _useState9[0],\n    setIsModalOpen = _useState9[1];\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n    isModalOpenUpdate = _useState10[0],\n    setIsModalOpenUpdate = _useState10[1];\n  var showModaUpdate = function showModaUpdate() {\n    setIsModalOpenUpdate(true);\n  };\n  var handleOkUpdate = function handleOkUpdate() {\n    setIsModalOpenUpdate(false);\n  };\n  var handleCancelUpdate = function handleCancelUpdate() {\n    setIsModalOpenUpdate(false);\n  };\n  var showModal = function showModal() {\n    setIsModalOpen(true);\n  };\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleOk = /*#__PURE__*/function () {\n    var _ref2 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _user_data, data, geojson, response;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _user_data = _services_UserDataService__WEBPACK_IMPORTED_MODULE_6__[\"default\"].get();\n            data = {};\n            data.trail = {};\n            data.trail[0].name = \"Added by admin in dashboard\";\n            data.trail[0].description = \"Added by admin in dashboard\";\n            data.trail[0].pictures = \"\";\n            data.trail[0].latitude = lngLatSelected.lat;\n            data.trail[0].longitude = lngLatSelected.lng;\n            data.trail[0].difficulty = 0;\n            data.trail[0].duration = 0;\n            data.trail[0].distance = 0;\n            data.trail[0].duration = 0;\n            data.trail[0].distance = 0;\n            data.trail[0].uphill = 0;\n            data.trail[0].downhill = 0;\n            data.trail[0].tools = [\"\"];\n            data.trail[0].relatedArticles = [\"\"];\n            data.trail[0].labels = [\"\"];\n            geojson = {\n              type: 'Feature',\n              features: {\n                geometry: {\n                  type: 'Point',\n                  coordinates: {\n                    \"lat\": lngLatSelected.lat,\n                    \"lng\": lngLatSelected.lng\n                  }\n                }\n              }\n            };\n            data.trail.geoJSON = JSON.stringify(geojson);\n            _context2.next = 23;\n            return _services_API__WEBPACK_IMPORTED_MODULE_4__[\"default\"].CreateMarker('POST', '/api/trail/create', _user_data, data, true);\n          case 23:\n            response = _context2.sent;\n            console.log(response);\n            setIsModalOpen(false);\n            _context2.next = 32;\n            break;\n          case 28:\n            _context2.prev = 28;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            setIsModalOpen(false);\n          case 32:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 28]]);\n    }));\n    return function handleOk() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleCancel = function handleCancel() {\n    setIsModalOpen(false);\n  };\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    var user_data = _services_UserDataService__WEBPACK_IMPORTED_MODULE_6__[\"default\"].get();\n    if (map.current) return; // initialize map only once\n    map.current = new mapbox_gl__WEBPACK_IMPORTED_MODULE_5___default.a.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.current.addControl(new mapbox_gl__WEBPACK_IMPORTED_MODULE_5___default.a.NavigationControl(), 'top-right');\n    map.current.addControl(new mapbox_gl__WEBPACK_IMPORTED_MODULE_5___default.a.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    }));\n    function fetchGeoJSON(_x) {\n      return _fetchGeoJSON.apply(this, arguments);\n    }\n    function _fetchGeoJSON() {\n      _fetchGeoJSON = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(user_data) {\n        var result, response, trails;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              console.log(user_data);\n              result = [];\n              _context3.next = 5;\n              return _services_API__WEBPACK_IMPORTED_MODULE_4__[\"default\"].send('POST', '/api/trail/retrieve', user_data, true);\n            case 5:\n              response = _context3.sent;\n              trails = response.data.trails;\n              console.log(trails);\n              trails.map(function (item) {\n                var tmp = JSON.parse(item.geoJSON);\n                result.push(tmp.features[0].geometry.coordinates[0]);\n              });\n              console.log(result);\n              return _context3.abrupt(\"return\", result);\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error fetching GeoJSON:', _context3.t0);\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 13]]);\n      }));\n      return _fetchGeoJSON.apply(this, arguments);\n    }\n    function loadMarker() {\n      return _loadMarker.apply(this, arguments);\n    }\n    function _loadMarker() {\n      _loadMarker = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var markers, geojson;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetchGeoJSON(user_data);\n            case 2:\n              markers = _context4.sent;\n              geojson = {\n                type: 'Feature',\n                features: markers.map(function (marker) {\n                  return {\n                    geometry: {\n                      type: 'Point',\n                      coordinates: {\n                        lat: marker[1],\n                        lng: marker[0]\n                      }\n                    }\n                  };\n                })\n              };\n              map.current.on('load', function () {\n                geojson.features.forEach(function (marker) {\n                  // create a DOM element for the marker\n                  var markerIcon = document.createElement('div');\n                  markerIcon.className = 'location-marker';\n                  markerIcon.style.backgroundImage = 'url(/custom-marker.png)';\n                  markerIcon.style.width = '60px';\n                  markerIcon.style.height = '90px';\n                  new mapbox_gl__WEBPACK_IMPORTED_MODULE_5___default.a.Marker(markerIcon).setLngLat(marker.geometry.coordinates).addTo(map.current);\n                  markerIcon.addEventListener('click', function () {\n                    // Open the modal when the marker is clicked\n                    //openModal(marker.name);\n                    setIsModalOpenUpdate(true);\n                  });\n                });\n              });\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return _loadMarker.apply(this, arguments);\n    }\n    loadMarker();\n    map.current.on('contextmenu', function (e) {\n      e.preventDefault();\n      var lngLat = e.lngLat;\n      setlngLatSelected(lngLat);\n      console.log('Right-clicked at:', lngLat);\n      setIsModalOpen(true);\n    });\n    //map.current.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    //return () => { map.current.remove()};\n  });\n\n  return __jsx(_components_Layout__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default.a, {\n    id: \"855806535\",\n    __self: this\n  }, \".map-container.jsx-855806535{position:absolute;width:100%;height:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/draki/Documents/Epitech/EIP/dashboard/admin/pages/control/index.js */\"), __jsx(\"div\", {\n    ref: mapContainer,\n    className: \"jsx-855806535\" + \" \" + \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }), __jsx(antd__WEBPACK_IMPORTED_MODULE_8__[\"Modal\"], {\n    title: \"Ajout de marqueur\",\n    open: isModalOpen,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    className: \"jsx-855806535\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, \"Voulez vous ajouter un marqueur \\xE0 l'emplacement : \"), __jsx(\"p\", {\n    className: \"jsx-855806535\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, \"longitude : \", lngLatSelected.lng, \" \"), __jsx(\"p\", {\n    className: \"jsx-855806535\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, \"latitude: \", lngLatSelected.lat)), __jsx(antd__WEBPACK_IMPORTED_MODULE_8__[\"Modal\"], {\n    title: \"Modification du marqueur\",\n    open: isModalOpenUpdate,\n    onOk: handleOkUpdate,\n    onCancel: handleCancelUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, __jsx(\"p\", {\n    className: \"jsx-855806535\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, \"longitude : \"), \" \", __jsx(antd__WEBPACK_IMPORTED_MODULE_8__[\"Input\"], {\n    placeholder: \"longitude\",\n    onChange: function onChange(e) {\n      setnewlgn(e.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 41\n    }\n  }), __jsx(\"p\", {\n    className: \"jsx-855806535\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    className: \"jsx-855806535\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"latitude: \"), __jsx(antd__WEBPACK_IMPORTED_MODULE_8__[\"Input\"], {\n    placeholder: \"latitude\",\n    onChange: function onChange(e) {\n      setnewlat(e.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 38\n    }\n  }), __jsx(\"p\", {\n    className: \"jsx-855806535\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }), __jsx(antd__WEBPACK_IMPORTED_MODULE_8__[\"Button\"], {\n    key: \"submit\",\n    type: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, \"Submit\")), __jsx(\"title\", {\n    className: \"jsx-855806535\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"Hik'UP Admin\"));\n}\n_s(Control, \"NRjSKXIQYFiYs65e4Txcw8MPMiU=\");\n_c = Control;\nvar _c;\n$RefreshReg$(_c, \"Control\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/control/index.js\n");

/***/ })

})