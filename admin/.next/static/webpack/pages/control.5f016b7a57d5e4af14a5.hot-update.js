webpackHotUpdate_N_E("pages/control",{

/***/ "./pages/control/index.js":
/*!********************************!*\
  !*** ./pages/control/index.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Control; });\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../components/Layout */ \"./components/Layout.js\");\n/* harmony import */ var _services_API__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/API */ \"./services/API.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! mapbox-gl */ \"./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _services_UserDataService__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/UserDataService */ \"./services/UserDataService.js\");\n/* harmony import */ var _components_SearchBar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/SearchBar */ \"./components/SearchBar.js\");\n/* harmony import */ var mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! mapbox-gl/dist/mapbox-gl.css */ \"./node_modules/mapbox-gl/dist/mapbox-gl.css\");\n/* harmony import */ var mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! antd */ \"./node_modules/antd/es/index.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__);\n\nvar _jsxFileName = \"/Users/draki/Documents/Epitech/EIP/dashboard/admin/pages/control/index.js\",\n  _s = $RefreshSig$();\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\n\n\n\n\n\n\n\n\n\n\nmapbox_gl__WEBPACK_IMPORTED_MODULE_6___default.a.accessToken = 'pk.eyJ1IjoiaGljY3VwLXN0YWZmIiwiYSI6ImNsangxeHVkbzAyNmwzdHJ4cmJiYWZmMm4ifQ.yI4259jlMq2elDiT_uK1kg';\nfunction Control(access_token, user_data) {\n  _s();\n  var router = Object(next_router__WEBPACK_IMPORTED_MODULE_3__[\"useRouter\"])();\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(-0.0),\n    newlat = _useState[0],\n    setnewlat = _useState[1];\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(-0.0),\n    newlgn = _useState2[0],\n    setnewlgn = _useState2[1];\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n    address = _useState3[0],\n    setaddress = _useState3[1];\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n    resultsearch = _useState5[0],\n    setresultsearch = _useState5[1];\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n    selectedMarker = _useState6[0],\n    setselectedMarker = _useState6[1];\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])('Initial Value'),\n    parentState = _useState7[0],\n    setParentState = _useState7[1];\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n    Trails = _useState8[0],\n    setTrails = _useState8[1];\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n    lngLatSelected = _useState9[0],\n    setlngLatSelected = _useState9[1];\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n    markersLoaded = _useState10[0],\n    setMarkersLoaded = _useState10[1];\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n    username = _useState11[0],\n    setInputValueUsername = _useState11[1];\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n    email = _useState12[0],\n    setInputValueEmail = _useState12[1];\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n    Markers = _useState13[0],\n    setMarkers = _useState13[1];\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n    Markers1 = _useState14[0],\n    setMarkers1 = _useState14[1];\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n    Markers2 = _useState15[0],\n    setMarkers2 = _useState15[1];\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(2.35),\n    lng = _useState16[0],\n    setLng = _useState16[1];\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(48.85),\n    lat = _useState17[0],\n    setLat = _useState17[1];\n  var _useState18 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(5),\n    zoom = _useState18[0],\n    setZoom = _useState18[1];\n  var map = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useRef\"])(null);\n  var mapContainer = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useRef\"])(null);\n  var _useState19 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n    isModalOpen = _useState19[0],\n    setIsModalOpen = _useState19[1];\n  var _useState20 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n    isModalOpenUpdate = _useState20[0],\n    setIsModalOpenUpdate = _useState20[1];\n  var showModaUpdate = function showModaUpdate() {\n    setIsModalOpenUpdate(true);\n  };\n  var handleOkUpdate = function handleOkUpdate() {\n    setIsModalOpenUpdate(false);\n  };\n  var handleCancelUpdate = function handleCancelUpdate() {\n    setIsModalOpenUpdate(false);\n  };\n  var showModal = function showModal() {\n    setIsModalOpen(true);\n  };\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            updateMarker(selectedMarker);\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var updateParentState = function updateParentState(newState) {\n    setParentState(newState);\n    setaddress(newState);\n    console.log(newState);\n  };\n  function fetchTrails() {\n    return _fetchTrails.apply(this, arguments);\n  }\n  function _fetchTrails() {\n    _fetchTrails = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var _user_data2, response, trails;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _user_data2 = _services_UserDataService__WEBPACK_IMPORTED_MODULE_7__[\"default\"].get();\n            console.log(_user_data2);\n            _context5.next = 5;\n            return _services_API__WEBPACK_IMPORTED_MODULE_5__[\"default\"].fetchTrails(\"POST\", '/api/trail/retrieve', _user_data2, true);\n          case 5:\n            response = _context5.sent;\n            trails = response.data.trails;\n            return _context5.abrupt(\"return\", trails);\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error('Error fetching Trails:', _context5.t0);\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[0, 10]]);\n    }));\n    return _fetchTrails.apply(this, arguments);\n  }\n  function getMarker(_x) {\n    return _getMarker.apply(this, arguments);\n  }\n  function _getMarker() {\n    _getMarker = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(selectedMarker) {\n      var trails, i, tmp;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            console.log('getMarker');\n            _context6.next = 3;\n            return fetchTrails();\n          case 3:\n            trails = _context6.sent;\n            console.dir(trails);\n            i = 0;\n          case 6:\n            if (!(i < trails.length)) {\n              _context6.next = 16;\n              break;\n            }\n            tmp = JSON.parse(trails[i].geoJSON);\n            console.log('selectedMArker :');\n            console.dir(selectedMarker);\n            if (!(typeof tmp.features !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0].geometry !== 'undefined' && typeof tmp.features[0].geometry.coordinates[0] !== 'undefined')) {\n              _context6.next = 13;\n              break;\n            }\n            if (!(tmp.features[0].geometry.coordinates[0][0] === selectedMarker.lng && tmp.features[0].geometry.coordinates[0][1] === selectedMarker.lat)) {\n              _context6.next = 13;\n              break;\n            }\n            return _context6.abrupt(\"return\", i);\n          case 13:\n            i++;\n            _context6.next = 6;\n            break;\n          case 16:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n    return _getMarker.apply(this, arguments);\n  }\n  function fetchCoordinates() {\n    return _fetchCoordinates.apply(this, arguments);\n  }\n  function _fetchCoordinates() {\n    _fetchCoordinates = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return fetch(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\".concat(address, \".json?access_token=\").concat(mapbox_gl__WEBPACK_IMPORTED_MODULE_6___default.a.accessToken));\n          case 3:\n            response = _context7.sent;\n            if (!response.ok) {\n              _context7.next = 13;\n              break;\n            }\n            _context7.next = 7;\n            return response.json();\n          case 7:\n            data = _context7.sent;\n            console.log(\"response : \" + data.features[0].center[0] + \" \" + data.features[0].center[1]);\n            return _context7.abrupt(\"return\", data.features[0].center);\n          case 13:\n            console.error('Error fetching coordinates:', response.statusText);\n          case 14:\n            _context7.next = 19;\n            break;\n          case 16:\n            _context7.prev = 16;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.error('Error:', _context7.t0);\n          case 19:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7, null, [[0, 16]]);\n    }));\n    return _fetchCoordinates.apply(this, arguments);\n  }\n  function updateMarker(_x2) {\n    return _updateMarker.apply(this, arguments);\n  }\n  function _updateMarker() {\n    _updateMarker = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(selectedMarker) {\n      var index, data, trails, tmp, coord, user_data, response, result;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return getMarker(selectedMarker);\n          case 2:\n            index = _context8.sent;\n            console.dir(index);\n            data = {};\n            _context8.next = 7;\n            return fetchTrails(user_data);\n          case 7:\n            trails = _context8.sent;\n            tmp = JSON.parse(trails[index].geoJSON);\n            data.id = trails[index].id;\n            data.latitude = newlat;\n            data.longitude = newlgn;\n            console.log(typeof tmp.features[0]);\n            _context8.next = 15;\n            return fetchCoordinates();\n          case 15:\n            coord = _context8.sent;\n            console.log(\"fetchCoordinates : \" + coord);\n            setnewlgn(coord[0]);\n            setnewlat(coord[1]);\n            tmp.features[0].geometry.coordinates[0][0] = coord[0];\n            tmp.features[0].geometry.coordinates[0][1] = coord[1];\n            console.log('tmp');\n            console.dir(tmp);\n            data.geoJSON = JSON.stringify(tmp);\n            console.log('here');\n            console.log(data);\n            user_data = _services_UserDataService__WEBPACK_IMPORTED_MODULE_7__[\"default\"].get();\n            _context8.next = 29;\n            return _services_API__WEBPACK_IMPORTED_MODULE_5__[\"default\"].CreateMarker('PUT', '/api/trail/update', user_data, data, true);\n          case 29:\n            response = _context8.sent;\n            result = response.data.trails;\n            console.log(result);\n            setIsModalOpenUpdate(false);\n            router.reload();\n          case 34:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    }));\n    return _updateMarker.apply(this, arguments);\n  }\n  var handleOk = /*#__PURE__*/function () {\n    var _ref2 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _user_data, trail, coord, geojson, response;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _user_data = _services_UserDataService__WEBPACK_IMPORTED_MODULE_7__[\"default\"].get();\n            trail = {};\n            trail.name = \"Added by admin in dashboard\";\n            trail.address = \"Added by admin in dashboard\";\n            trail.description = \"Added by admin in dashboard\";\n            trail.pictures = [\"https://google.com\"];\n            _context2.next = 9;\n            return fetchCoordinates();\n          case 9:\n            coord = _context2.sent;\n            trail.latitude = coord[1];\n            trail.longitude = coord[0];\n            trail.difficulty = 0;\n            trail.duration = 0;\n            trail.distance = 0;\n            trail.uphill = 0;\n            trail.downhill = 0;\n            trail.tools = [];\n            trail.relatedArticles = [];\n            trail.labels = [];\n            geojson = {\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: [[coord[0], coord[1]]]\n                }\n              }]\n            };\n            trail.geoJSON = JSON.stringify(geojson);\n            _context2.next = 24;\n            return _services_API__WEBPACK_IMPORTED_MODULE_5__[\"default\"].CreateMarker('POST', '/api/trail/create', _user_data, trail, true);\n          case 24:\n            response = _context2.sent;\n            console.log(response);\n            setIsModalOpen(false);\n            router.reload();\n            _context2.next = 35;\n            break;\n          case 30:\n            _context2.prev = 30;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            setIsModalOpen(false);\n            router.reload();\n          case 35:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 30]]);\n    }));\n    return function handleOk() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleCancel = function handleCancel() {\n    setIsModalOpen(false);\n  };\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    loadMarker();\n    //const myArray = Markers[0]?.split(\",\");\n    //console.log(myArray);\n    //console.log(\"Markers[0] : \" + Markers[0] + \" Markers[1] : \" + Markers[0]);\n    var user_data = _services_UserDataService__WEBPACK_IMPORTED_MODULE_7__[\"default\"].get();\n    if (map.current && markersLoaded == true) return;\n    console.log(\"markers: \" + Markers1 + \" \" + Markers2);\n    map.current = new mapbox_gl__WEBPACK_IMPORTED_MODULE_6___default.a.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [Markers1, Markers2],\n      //center: [lng, lat],\n      zoom: zoom\n    });\n    map.current.addControl(new mapbox_gl__WEBPACK_IMPORTED_MODULE_6___default.a.NavigationControl(), 'top-right');\n    map.current.addControl(new mapbox_gl__WEBPACK_IMPORTED_MODULE_6___default.a.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    }));\n    function fetchGeoJSON() {\n      return _fetchGeoJSON.apply(this, arguments);\n    }\n    function _fetchGeoJSON() {\n      _fetchGeoJSON = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var result, user_data2, response, trails, tmp, last1, last2;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              result = [];\n              user_data2 = _services_UserDataService__WEBPACK_IMPORTED_MODULE_7__[\"default\"].get();\n              _context3.next = 5;\n              return _services_API__WEBPACK_IMPORTED_MODULE_5__[\"default\"].send('POST', \"/api/trail/retrieve\", user_data2, true);\n            case 5:\n              response = _context3.sent;\n              trails = response.data.trails;\n              console.log(trails);\n              console.log(response);\n              trails.map(function (item) {\n                var tmp = JSON.parse(item.geoJSON);\n                console.log(tmp);\n                if (typeof tmp.features !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0].geometry.coordinates[0] !== 'undefined') {\n                  result.push(tmp.features[0].geometry.coordinates[0]);\n                } else {\n                  //result.push(tmp.features.geometry.coordinates);\n                }\n              });\n              console.log(result);\n              console.log(typeof result.slice(-1));\n              tmp = JSON.stringify(result.slice(-1));\n              last1 = tmp.split(\",\")[0].replaceAll('[', '');\n              last2 = tmp.split(\",\")[1].replaceAll(']', '');\n              console.log(\"test \" + last1 + \" \" + last2);\n              setMarkers1(last1);\n              setMarkers2(last2);\n              setMarkers(result.slice(-1));\n              return _context3.abrupt(\"return\", result);\n            case 22:\n              _context3.prev = 22;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error fetching GeoJSON:', _context3.t0);\n            case 25:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 22]]);\n      }));\n      return _fetchGeoJSON.apply(this, arguments);\n    }\n    function loadMarker() {\n      return _loadMarker.apply(this, arguments);\n    }\n    function _loadMarker() {\n      _loadMarker = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var markers, geojson;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetchGeoJSON(user_data);\n            case 2:\n              markers = _context4.sent;\n              geojson = {\n                type: 'Feature',\n                features: markers === null || markers === void 0 ? void 0 : markers.map(function (marker) {\n                  return {\n                    geometry: {\n                      type: 'Point',\n                      coordinates: {\n                        lat: marker[1],\n                        lng: marker[0]\n                      }\n                    }\n                  };\n                })\n              };\n              map.current.on('load', function () {\n                var _geojson$features;\n                geojson === null || geojson === void 0 ? void 0 : (_geojson$features = geojson.features) === null || _geojson$features === void 0 ? void 0 : _geojson$features.forEach(function (marker) {\n                  // create a DOM element for the marker\n                  var markerIcon = document.createElement('div');\n                  markerIcon.className = 'location-marker';\n                  markerIcon.style.backgroundImage = 'url(/custom-marker.png)';\n                  markerIcon.style.width = '60px';\n                  markerIcon.style.height = '90px';\n                  new mapbox_gl__WEBPACK_IMPORTED_MODULE_6___default.a.Marker(markerIcon).setLngLat(marker.geometry.coordinates).addTo(map.current);\n                  markerIcon.addEventListener('click', function () {\n                    console.dir('marker :' + JSON.stringify(marker.geometry.coordinates));\n                    setselectedMarker(marker.geometry.coordinates);\n                    setIsModalOpenUpdate(true);\n                  });\n                });\n              });\n              setMarkersLoaded(true);\n              return _context4.abrupt(\"return\", markers);\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return _loadMarker.apply(this, arguments);\n    }\n    map.current.on('contextmenu', function (e) {\n      e.preventDefault();\n      var lngLat = e.lngLat;\n      setlngLatSelected(lngLat);\n      console.log('Right-clicked at:', lngLat);\n      setIsModalOpen(true);\n    });\n    //map.current.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    //return () => { map.current.remove()};\n  }, []);\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(_components_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default.a, {\n      id: \"855806535\",\n      children: \".map-container.jsx-855806535{position:absolute;width:100%;height:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/draki/Documents/Epitech/EIP/dashboard/admin/pages/control/index.js */\"\n    }, void 0, false, void 0, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(\"div\", {\n      ref: mapContainer,\n      className: \"jsx-855806535\" + \" \" + \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(antd__WEBPACK_IMPORTED_MODULE_10__[\"Modal\"], {\n      title: \"Ajout du marqueur\",\n      open: isModalOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(\"p\", {\n        className: \"jsx-855806535\",\n        children: \"Voulez vous ajouter un marqueur \\xE0 l'emplacement : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(\"p\", {\n        className: \"jsx-855806535\",\n        children: \"Addresse : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(_components_SearchBar__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n        childState: parentState,\n        updateParentState: updateParentState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(\"p\", {\n        className: \"jsx-855806535\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(antd__WEBPACK_IMPORTED_MODULE_10__[\"Button\"], {\n        type: \"primary\",\n        onClick: handleOk,\n        children: \"Submit\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(antd__WEBPACK_IMPORTED_MODULE_10__[\"Modal\"], {\n      title: \"Modification du marqueur\",\n      open: isModalOpenUpdate,\n      onOk: handleOkUpdate,\n      onCancel: handleCancelUpdate,\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(\"p\", {\n        className: \"jsx-855806535\",\n        children: \"Addresse : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(_components_SearchBar__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n        childState: parentState,\n        updateParentState: updateParentState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(\"p\", {\n        className: \"jsx-855806535\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__[\"jsxDEV\"])(antd__WEBPACK_IMPORTED_MODULE_10__[\"Button\"], {\n        type: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 9\n  }, this);\n}\n_s(Control, \"+cGY6qDKn/mKKRlYwdCkXonpgz0=\", false, function () {\n  return [next_router__WEBPACK_IMPORTED_MODULE_3__[\"useRouter\"]];\n});\n_c = Control;\nvar _c;\n$RefreshReg$(_c, \"Control\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/control/index.js\n");

/***/ })

})