{"ast":null,"code":"import AccessTokenService from \"./AccessTokenService\";\nimport Router from \"next/router\";\nclass API {\n  getDomain() {\n    return process.env.NEXT_PUBLIC_API_URL;\n  }\n  getApiDomain() {\n    return this.getDomain();\n  }\n  async send(method, route, data = null, auth = true) {\n    let api = this.getApiDomain();\n    console.log(route);\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n    if (auth) {\n      let accessToken = AccessTokenService.get();\n      accessToken = accessToken ? accessToken : '';\n      if (accessToken) headers['Authorization'] = 'Bearer ' + accessToken;\n    }\n    if (method !== \"GET\" && data) {\n      data = {};\n      data = JSON.stringify(data);\n      console.log(data);\n    } else data = null;\n    try {\n      let url = api + route;\n      let response = await fetch(url, {\n        method: method,\n        headers: headers,\n        body: data\n      });\n      if (response.status === 401) {\n        AccessTokenService.remove();\n        return {\n          data: null,\n          status: -1\n        };\n      }\n      return {\n        data: await response.json(),\n        status: response.status\n      };\n    } catch (e) {\n      await Router.push('/');\n      return {\n        data: null,\n        status: -1\n      };\n    }\n  }\n}\nconst service = new API();\nexport default service;","map":{"version":3,"names":["AccessTokenService","Router","API","getDomain","process","env","NEXT_PUBLIC_API_URL","getApiDomain","send","method","route","data","auth","api","console","log","headers","accessToken","get","JSON","stringify","url","response","fetch","body","status","remove","json","e","push","service"],"sources":["/Users/draki/Documents/Epitech/EIP/admin/services/API.js"],"sourcesContent":["import AccessTokenService from \"./AccessTokenService\";\nimport Router from \"next/router\";\n\nclass API {\n    getDomain() {\n        return process.env.NEXT_PUBLIC_API_URL;\n    }\n\n    getApiDomain() {\n        return this.getDomain();\n    }\n\n    async send(method, route, data = null, auth = true) {\n        let api = this.getApiDomain();\n        console.log(route);\n        let headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        };\n        if (auth) {\n            let accessToken = AccessTokenService.get();\n            accessToken = accessToken ? accessToken : '';\n            if (accessToken)\n                headers['Authorization'] = 'Bearer ' + accessToken;\n        }\n        if (method !== \"GET\" && data) {\n            data = {}\n            data = JSON.stringify(data);\n            console.log(data);\n        }\n        else\n            data = null;\n        try {\n        let url = api + route;\n        let response = await fetch(url, {\n                method: method,\n                headers: headers,\n                body: data,\n            });\n            if (response.status === 401) {\n                AccessTokenService.remove();\n                return {\n                    data: null,\n                    status: -1,\n                };\n            }\n            return {\n                data: await response.json(),\n                status: response.status,\n            };\n        } catch (e) {\n            await Router.push('/');\n            return {\n                data: null,\n                status: -1,\n            };\n        }\n    }\n}\n\nconst service = new API();\nexport default service;\n"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,MAAM,MAAM,aAAa;AAEhC,MAAMC,GAAG,CAAC;EACNC,SAASA,CAAA,EAAG;IACR,OAAOC,OAAO,CAACC,GAAG,CAACC,mBAAmB;EAC1C;EAEAC,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACJ,SAAS,CAAC,CAAC;EAC3B;EAEA,MAAMK,IAAIA,CAACC,MAAM,EAAEC,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,IAAI,GAAG,IAAI,EAAE;IAChD,IAAIC,GAAG,GAAG,IAAI,CAACN,YAAY,CAAC,CAAC;IAC7BO,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;IAClB,IAAIM,OAAO,GAAG;MACV,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACD,IAAIJ,IAAI,EAAE;MACN,IAAIK,WAAW,GAAGjB,kBAAkB,CAACkB,GAAG,CAAC,CAAC;MAC1CD,WAAW,GAAGA,WAAW,GAAGA,WAAW,GAAG,EAAE;MAC5C,IAAIA,WAAW,EACXD,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGC,WAAW;IAC1D;IACA,IAAIR,MAAM,KAAK,KAAK,IAAIE,IAAI,EAAE;MAC1BA,IAAI,GAAG,CAAC,CAAC;MACTA,IAAI,GAAGQ,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC;MAC3BG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACrB,CAAC,MAEGA,IAAI,GAAG,IAAI;IACf,IAAI;MACJ,IAAIU,GAAG,GAAGR,GAAG,GAAGH,KAAK;MACrB,IAAIY,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QACxBZ,MAAM,EAAEA,MAAM;QACdO,OAAO,EAAEA,OAAO;QAChBQ,IAAI,EAAEb;MACV,CAAC,CAAC;MACF,IAAIW,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QACzBzB,kBAAkB,CAAC0B,MAAM,CAAC,CAAC;QAC3B,OAAO;UACHf,IAAI,EAAE,IAAI;UACVc,MAAM,EAAE,CAAC;QACb,CAAC;MACL;MACA,OAAO;QACHd,IAAI,EAAE,MAAMW,QAAQ,CAACK,IAAI,CAAC,CAAC;QAC3BF,MAAM,EAAEH,QAAQ,CAACG;MACrB,CAAC;IACL,CAAC,CAAC,OAAOG,CAAC,EAAE;MACR,MAAM3B,MAAM,CAAC4B,IAAI,CAAC,GAAG,CAAC;MACtB,OAAO;QACHlB,IAAI,EAAE,IAAI;QACVc,MAAM,EAAE,CAAC;MACb,CAAC;IACL;EACJ;AACJ;AAEA,MAAMK,OAAO,GAAG,IAAI5B,GAAG,CAAC,CAAC;AACzB,eAAe4B,OAAO"},"metadata":{},"sourceType":"module"}