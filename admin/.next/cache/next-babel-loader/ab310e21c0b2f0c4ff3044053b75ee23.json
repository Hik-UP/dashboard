{"ast":null,"code":"var _jsxFileName = \"/Users/draki/Documents/Epitech/EIP/dashboard/admin/components/SearchBar.js\";\nimport { useState, useEffect } from 'react';\nimport { Button, Modal, Input, List } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n  const {\n    0: results,\n    1: setResults\n  } = useState([]);\n  const {\n    0: address,\n    1: setaddress\n  } = useState('');\n  const mapboxToken = 'pk.eyJ1IjoiaGljY3VwLXN0YWZmIiwiYSI6ImNsangxeHVkbzAyNmwzdHJ4cmJiYWZmMm4ifQ.yI4259jlMq2elDiT_uK1kg';\n  useEffect(() => {\n    if (input) {\n      // Fetch and update results based on user input\n      const fetchResults = async () => {\n        try {\n          const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${input}.json?access_token=${mapboxToken}`);\n          if (response.ok) {\n            const data = await response.json();\n            console.log(data.features);\n            setResults(data.features);\n          } else {\n            console.error('Error fetching results:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      };\n      fetchResults();\n    } else {\n      // Clear results when input is empty\n      setResults([]);\n    }\n  }, [input]);\n  const handleItemClick = selectedValue => {\n    console.log('Selected Item:', selectedValue);\n    set;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Recherche d'une localisation:\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dataSource: results,\n      onClick: () => onItemClick(result.place_name),\n      style: {\n        cursor: 'pointer'\n      },\n      renderItem: (result, index) => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: result.place_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\nexport default SearchBar;","map":{"version":3,"names":["useState","useEffect","Button","Modal","Input","List","jsxDEV","_jsxDEV","SearchBar","input","setInput","results","setResults","address","setaddress","mapboxToken","fetchResults","response","fetch","ok","data","json","console","log","features","error","statusText","handleItemClick","selectedValue","set","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","dataSource","onClick","onItemClick","result","place_name","style","cursor","renderItem","index","Item"],"sources":["/Users/draki/Documents/Epitech/EIP/dashboard/admin/components/SearchBar.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Button, Modal, Input, List } from 'antd';\n\nconst SearchBar = () => {\n  const [input, setInput] = useState('');\n  const [results, setResults] = useState([]);\n  const [address, setaddress] =  useState('');\n\n  const mapboxToken = 'pk.eyJ1IjoiaGljY3VwLXN0YWZmIiwiYSI6ImNsangxeHVkbzAyNmwzdHJ4cmJiYWZmMm4ifQ.yI4259jlMq2elDiT_uK1kg';\n\n  useEffect(() => {\n    if (input) {\n      // Fetch and update results based on user input\n      const fetchResults = async () => {\n        try {\n          const response = await fetch(\n            `https://api.mapbox.com/geocoding/v5/mapbox.places/${input}.json?access_token=${mapboxToken}`\n          );\n          if (response.ok) {\n            const data = await response.json();\n            console.log(data.features);\n            setResults(data.features);\n          } else {\n            console.error('Error fetching results:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      };\n\n      fetchResults();\n    } else {\n      // Clear results when input is empty\n      setResults([]);\n    }\n  }, [input]);\n\n  const handleItemClick = (selectedValue) => {\n    console.log('Selected Item:', selectedValue);\n    set\n  };\n\n\n  return (\n    <div>\n      < Input\n        type=\"text\"\n        placeholder=\"Recherche d'une localisation:\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n     <List\n      dataSource={results}\n      onClick={() => onItemClick(result.place_name)}\n      style={{ cursor: 'pointer' }}\n      renderItem={(result, index) => (\n        <List.Item>\n          {result.place_name}\n        </List.Item>\n      )}\n    />\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAM;IAAA,GAACC,KAAK;IAAA,GAAEC;EAAQ,IAAIV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAA,GAACW,OAAO;IAAA,GAAEC;EAAU,IAAIZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAAA,GAACa,OAAO;IAAA,GAAEC;EAAU,IAAKd,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMe,WAAW,GAAG,kGAAkG;EAEtHd,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,EAAE;MACT;MACA,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,qDAAoDT,KAAM,sBAAqBM,WAAY,EAC9F,CAAC;UACD,IAAIE,QAAQ,CAACE,EAAE,EAAE;YACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,QAAQ,CAAC;YAC1BZ,UAAU,CAACQ,IAAI,CAACI,QAAQ,CAAC;UAC3B,CAAC,MAAM;YACLF,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAER,QAAQ,CAACS,UAAU,CAAC;UAC/D;QACF,CAAC,CAAC,OAAOD,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAChC;MACF,CAAC;MAEDT,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACL;MACAJ,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMkB,eAAe,GAAIC,aAAa,IAAK;IACzCN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,aAAa,CAAC;IAC5CC,GAAG;EACL,CAAC;EAGD,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA,CAAEH,KAAK;MACL2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,+BAA+B;MAC3CC,KAAK,EAAExB,KAAM;MACbyB,QAAQ,EAAGC,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACHjC,OAAA,CAACF,IAAI;MACJoC,UAAU,EAAE9B,OAAQ;MACpB+B,OAAO,EAAEA,CAAA,KAAMC,WAAW,CAACC,MAAM,CAACC,UAAU,CAAE;MAC9CC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAE;MAC7BC,UAAU,EAAEA,CAACJ,MAAM,EAAEK,KAAK,kBACxB1C,OAAA,CAACF,IAAI,CAAC6C,IAAI;QAAApB,QAAA,EACPc,MAAM,CAACC;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IACX;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEV,CAAC;AAED,eAAehC,SAAS"},"metadata":{},"sourceType":"module"}