{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst storageName = \"user_data\";\nclass UserDataService {\n  constructor() {\n    _defineProperty(this, \"userData\", null);\n  }\n  get() {\n    if (this.userData) return this.userData;\n    if (localStorage === undefined) return null;\n    const userData = localStorage.getItem(storageName);\n    this.userData = userData;\n    return userData;\n  }\n  set(userData) {\n    this.userData = userData;\n    localStorage.setItem(storageName, userData);\n  }\n  remove() {\n    this.userData = null;\n    localStorage.removeItem(storageName);\n  }\n}\nconst service = new UserDataService();\nexport default service;","map":{"version":3,"names":["storageName","UserDataService","constructor","_defineProperty","get","userData","localStorage","undefined","getItem","set","setItem","remove","removeItem","service"],"sources":["/Users/draki/Documents/Epitech/EIP/admin/services/UserDataService.js"],"sourcesContent":["const storageName = \"user_data\";\n\nclass UserDataService {\n    userData = null;\n\n    get() {\n        if (this.userData)\n            return this.userData;\n\n        if (localStorage === undefined)\n            return null;\n        const userData = localStorage.getItem(storageName);\n        this.userData = userData\n        return userData;\n    }\n\n    set(userData) {\n        this.userData = userData;\n        localStorage.setItem(storageName, userData);\n    }\n\n    remove() {\n        this.userData = null;\n        localStorage.removeItem(storageName);\n    }\n}\n\nconst service = new UserDataService();\nexport default service;\n"],"mappings":";;;AAAA,MAAMA,WAAW,GAAG,WAAW;AAE/B,MAAMC,eAAe,CAAC;EAAAC,YAAA;IAAAC,eAAA,mBACP,IAAI;EAAA;EAEfC,GAAGA,CAAA,EAAG;IACF,IAAI,IAAI,CAACC,QAAQ,EACb,OAAO,IAAI,CAACA,QAAQ;IAExB,IAAIC,YAAY,KAAKC,SAAS,EAC1B,OAAO,IAAI;IACf,MAAMF,QAAQ,GAAGC,YAAY,CAACE,OAAO,CAACR,WAAW,CAAC;IAClD,IAAI,CAACK,QAAQ,GAAGA,QAAQ;IACxB,OAAOA,QAAQ;EACnB;EAEAI,GAAGA,CAACJ,QAAQ,EAAE;IACV,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxBC,YAAY,CAACI,OAAO,CAACV,WAAW,EAAEK,QAAQ,CAAC;EAC/C;EAEAM,MAAMA,CAAA,EAAG;IACL,IAAI,CAACN,QAAQ,GAAG,IAAI;IACpBC,YAAY,CAACM,UAAU,CAACZ,WAAW,CAAC;EACxC;AACJ;AAEA,MAAMa,OAAO,GAAG,IAAIZ,eAAe,CAAC,CAAC;AACrC,eAAeY,OAAO"},"metadata":{},"sourceType":"module"}