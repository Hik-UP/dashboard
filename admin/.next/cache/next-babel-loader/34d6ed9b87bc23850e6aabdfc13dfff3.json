{"ast":null,"code":"var _jsxFileName = \"/Users/draki/Documents/Epitech/EIP/admin/pages/control/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport API from '../../services/API';\nimport mapboxgl, { accessToken } from \"mapbox-gl\";\nimport AccessTokenService from \"../../services/AccessTokenService\";\nimport UserDataService from \"../../services/UserDataService\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\nmapboxgl.accessToken = 'pk.eyJ1IjoiaGljY3VwLXN0YWZmIiwiYSI6ImNsangxeHVkbzAyNmwzdHJ4cmJiYWZmMm4ifQ.yI4259jlMq2elDiT_uK1kg';\nexport default function Control(access_token, user_data) {\n  const {\n    0: lng,\n    1: setLng\n  } = useState(2.35);\n  const {\n    0: lat,\n    1: setLat\n  } = useState(48.85);\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState(7);\n  const map = useRef(null);\n  const mapContainer = useRef(null);\n  useEffect(() => {\n    const user_data = UserDataService.get();\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    //async function fetchGeoJSON(user_data) {\n    //    try {\n    //      console.log(user_data);\n    //        const response = await API.send('POST', '/api/trail/retrieve', user_data, true);\n    //          let trails = response.data.trails;\n    //          console.log(trails);\n    //          trails.map((item, index) => {\n    //            let tmp = JSON.parse(item.geoJSON);\n    //            let tmpgeoJSON = \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"properties\\\":{\\\"id\\\": \"+ index +\",\\\"name\\\": \\\"\"+ index.toString() +\"\\\"},\\\"geometry\\\":{\\\"type\\\": \\\"Point\\\", \\\"coordinates\\\": [\" + tmp.features[0].geometry.coordinates[0] + \"]}}]}\";\n    //            console.log(\"item : \" + tmpgeoJSON);\n    //            if (!map.current.getSource(\"marker-\" + index)) {\n    //            map.current.addSource(\"marker-\" + index, {\n    //              type: 'geojson',\n    //              data: tmpgeoJSON,\n    //            });\n    //            map.current.addLayer({\n    //              id:  'marker-layer',\n    //              type: 'symbol',\n    //              source: \"marker-\" + index,\n    //              layout: {\n    //                'icon-image': 'marker-15',\n    //              },\n    //            });\n    //          } else {\n    //            map.current.getSource(\"marker-\" + index).setData(tmpgeoJSON);\n    //          }\n    //          \n    //          });\n    //      } catch (error) {\n    //          console.error('Error fetching GeoJSON:', error);\n    //      }\n    //    }\n    //    fetchGeoJSON(user_data);\n\n    map.current.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    return () => {\n      map.current.remove();\n    };\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(_JSXStyle, {\n    id: \"855806535\",\n    __self: this\n  }, \".map-container.jsx-855806535{position:absolute;width:100%;height:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kcmFraS9Eb2N1bWVudHMvRXBpdGVjaC9FSVAvYWRtaW4vcGFnZXMvY29udHJvbC9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRTRCLEFBRzJDLGtCQUNQLFdBQ0MsWUFDaEIiLCJmaWxlIjoiL1VzZXJzL2RyYWtpL0RvY3VtZW50cy9FcGl0ZWNoL0VJUC9hZG1pbi9wYWdlcy9jb250cm9sL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9MYXlvdXQnO1xuaW1wb3J0IEFQSSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9BUEknO1xuaW1wb3J0IG1hcGJveGdsLCB7IGFjY2Vzc1Rva2VuIH0gZnJvbSBcIm1hcGJveC1nbFwiO1xuaW1wb3J0IEFjY2Vzc1Rva2VuU2VydmljZSBmcm9tIFwiLi4vLi4vc2VydmljZXMvQWNjZXNzVG9rZW5TZXJ2aWNlXCI7XG5pbXBvcnQgVXNlckRhdGFTZXJ2aWNlIGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9Vc2VyRGF0YVNlcnZpY2VcIjtcbmltcG9ydCAnbWFwYm94LWdsL2Rpc3QvbWFwYm94LWdsLmNzcyc7XG5tYXBib3hnbC5hY2Nlc3NUb2tlbiA9ICdway5leUoxSWpvaWFHbGpZM1Z3TFhOMFlXWm1JaXdpWVNJNkltTnNhbmd4ZUhWa2J6QXlObXd6ZEhKNGNtSmlZV1ptTW00aWZRLnlJNDI1OWpsTXEyZWxEaVRfdUsxa2cnO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29udHJvbCAoYWNjZXNzX3Rva2VuLCB1c2VyX2RhdGEpIHtcbiAgXG4gICAgY29uc3QgW2xuZywgc2V0TG5nXSA9IHVzZVN0YXRlKDIuMzUpO1xuICAgIGNvbnN0IFtsYXQsIHNldExhdF0gPSB1c2VTdGF0ZSg0OC44NSk7XG4gICAgY29uc3QgW3pvb20sIHNldFpvb21dID0gdXNlU3RhdGUoNyk7XG4gICAgY29uc3QgbWFwID0gdXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IG1hcENvbnRhaW5lciA9IHVzZVJlZihudWxsKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHVzZXJfZGF0YSA9IFVzZXJEYXRhU2VydmljZS5nZXQoKTtcbiAgICAgICAgaWYgKG1hcC5jdXJyZW50KSByZXR1cm47IC8vIGluaXRpYWxpemUgbWFwIG9ubHkgb25jZVxuICAgICAgICBtYXAuY3VycmVudCA9IG5ldyBtYXBib3hnbC5NYXAoe1xuICAgICAgICBjb250YWluZXI6IG1hcENvbnRhaW5lci5jdXJyZW50LFxuICAgICAgICBzdHlsZTogJ21hcGJveDovL3N0eWxlcy9tYXBib3gvc3RyZWV0cy12MTInLFxuICAgICAgICBjZW50ZXI6IFtsbmcsIGxhdF0sXG4gICAgICAgIHpvb206IHpvb21cbiAgICAgICAgfSk7XG4gICAgICAgIC8vYXN5bmMgZnVuY3Rpb24gZmV0Y2hHZW9KU09OKHVzZXJfZGF0YSkge1xuICAgICAgICAvLyAgICB0cnkge1xuICAgICAgICAvLyAgICAgIGNvbnNvbGUubG9nKHVzZXJfZGF0YSk7XG4gICAgICAgIC8vICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IEFQSS5zZW5kKCdQT1NUJywgJy9hcGkvdHJhaWwvcmV0cmlldmUnLCB1c2VyX2RhdGEsIHRydWUpO1xuICAgICAgICAvLyAgICAgICAgICBsZXQgdHJhaWxzID0gcmVzcG9uc2UuZGF0YS50cmFpbHM7XG4gICAgICAgIC8vICAgICAgICAgIGNvbnNvbGUubG9nKHRyYWlscyk7XG4gICAgICAgIC8vICAgICAgICAgIHRyYWlscy5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgIC8vICAgICAgICAgICAgbGV0IHRtcCA9IEpTT04ucGFyc2UoaXRlbS5nZW9KU09OKTtcbiAgICAgICAgLy8gICAgICAgICAgICBsZXQgdG1wZ2VvSlNPTiA9IFwie1xcXCJ0eXBlXFxcIjpcXFwiRmVhdHVyZUNvbGxlY3Rpb25cXFwiLFxcXCJmZWF0dXJlc1xcXCI6W3tcXFwidHlwZVxcXCI6XFxcIkZlYXR1cmVcXFwiLFxcXCJwcm9wZXJ0aWVzXFxcIjp7XFxcImlkXFxcIjogXCIrIGluZGV4ICtcIixcXFwibmFtZVxcXCI6IFxcXCJcIisgaW5kZXgudG9TdHJpbmcoKSArXCJcXFwifSxcXFwiZ2VvbWV0cnlcXFwiOntcXFwidHlwZVxcXCI6IFxcXCJQb2ludFxcXCIsIFxcXCJjb29yZGluYXRlc1xcXCI6IFtcIiArIHRtcC5mZWF0dXJlc1swXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXSArIFwiXX19XX1cIjtcbiAgICAgICAgLy8gICAgICAgICAgICBjb25zb2xlLmxvZyhcIml0ZW0gOiBcIiArIHRtcGdlb0pTT04pO1xuICAgICAgICAvLyAgICAgICAgICAgIGlmICghbWFwLmN1cnJlbnQuZ2V0U291cmNlKFwibWFya2VyLVwiICsgaW5kZXgpKSB7XG4gICAgICAgIC8vICAgICAgICAgICAgbWFwLmN1cnJlbnQuYWRkU291cmNlKFwibWFya2VyLVwiICsgaW5kZXgsIHtcbiAgICAgICAgLy8gICAgICAgICAgICAgIHR5cGU6ICdnZW9qc29uJyxcbiAgICAgICAgLy8gICAgICAgICAgICAgIGRhdGE6IHRtcGdlb0pTT04sXG4gICAgICAgIC8vICAgICAgICAgICAgfSk7XG4gICAgICAgIC8vICAgICAgICAgICAgbWFwLmN1cnJlbnQuYWRkTGF5ZXIoe1xuICAgICAgICAvLyAgICAgICAgICAgICAgaWQ6ICAnbWFya2VyLWxheWVyJyxcbiAgICAgICAgLy8gICAgICAgICAgICAgIHR5cGU6ICdzeW1ib2wnLFxuICAgICAgICAvLyAgICAgICAgICAgICAgc291cmNlOiBcIm1hcmtlci1cIiArIGluZGV4LFxuICAgICAgICAvLyAgICAgICAgICAgICAgbGF5b3V0OiB7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICdpY29uLWltYWdlJzogJ21hcmtlci0xNScsXG4gICAgICAgIC8vICAgICAgICAgICAgICB9LFxuICAgICAgICAvLyAgICAgICAgICAgIH0pO1xuICAgICAgICAvLyAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAvLyAgICAgICAgICAgIG1hcC5jdXJyZW50LmdldFNvdXJjZShcIm1hcmtlci1cIiArIGluZGV4KS5zZXREYXRhKHRtcGdlb0pTT04pO1xuICAgICAgICAvLyAgICAgICAgICB9XG4gICAgICAgIC8vICAgICAgICAgIFxuICAgICAgICAvLyAgICAgICAgICB9KTtcbiAgICAgICAgLy8gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAvLyAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBHZW9KU09OOicsIGVycm9yKTtcbiAgICAgICAgLy8gICAgICB9XG4gICAgICAgIC8vICAgIH1cbiAgICAgICAgLy8gICAgZmV0Y2hHZW9KU09OKHVzZXJfZGF0YSk7XG4gICAgICAgIFxuICAgICAgICAgICAgbWFwLmN1cnJlbnQuYWRkQ29udHJvbChuZXcgbWFwYm94Z2wuTmF2aWdhdGlvbkNvbnRyb2woKSwgXCJ0b3AtcmlnaHRcIik7XG4gICAgICAgICAgICByZXR1cm4gKCkgPT4geyBtYXAuY3VycmVudC5yZW1vdmUoKX07XG4gICAgICB9KTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxMYXlvdXQ+XG4gICAgICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgICAgICAubWFwLWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgcmVmPXttYXBDb250YWluZXJ9IGNsYXNzTmFtZT1cIm1hcC1jb250YWluZXJcIi8+XG4gICAgICAgICAgICA8dGl0bGU+SGlrJ1VQIEFkbWluPC90aXRsZT5cbiAgICAgICAgPC9MYXlvdXQ+XG4gICAgKTtcbn0iXX0= */\\n/*@ sourceURL=/Users/draki/Documents/Epitech/EIP/admin/pages/control/index.js */\"), __jsx(\"div\", {\n    ref: mapContainer,\n    className: \"jsx-855806535\" + \" \" + \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), __jsx(\"title\", {\n    className: \"jsx-855806535\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Hik'UP Admin\"));\n}","map":{"version":3,"names":["React","useRef","useEffect","useState","Layout","API","mapboxgl","accessToken","AccessTokenService","UserDataService","Control","access_token","user_data","lng","setLng","lat","setLat","zoom","setZoom","map","mapContainer","get","current","Map","container","style","center","addControl","NavigationControl","remove","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_JSXStyle","id","ref","className"],"sources":["/Users/draki/Documents/Epitech/EIP/admin/pages/control/index.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport API from '../../services/API';\nimport mapboxgl, { accessToken } from \"mapbox-gl\";\nimport AccessTokenService from \"../../services/AccessTokenService\";\nimport UserDataService from \"../../services/UserDataService\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\nmapboxgl.accessToken = 'pk.eyJ1IjoiaGljY3VwLXN0YWZmIiwiYSI6ImNsangxeHVkbzAyNmwzdHJ4cmJiYWZmMm4ifQ.yI4259jlMq2elDiT_uK1kg';\n\n\n\nexport default function Control (access_token, user_data) {\n  \n    const [lng, setLng] = useState(2.35);\n    const [lat, setLat] = useState(48.85);\n    const [zoom, setZoom] = useState(7);\n    const map = useRef(null);\n    const mapContainer = useRef(null);\n\n    useEffect(() => {\n        const user_data = UserDataService.get();\n        if (map.current) return; // initialize map only once\n        map.current = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [lng, lat],\n        zoom: zoom\n        });\n        //async function fetchGeoJSON(user_data) {\n        //    try {\n        //      console.log(user_data);\n        //        const response = await API.send('POST', '/api/trail/retrieve', user_data, true);\n        //          let trails = response.data.trails;\n        //          console.log(trails);\n        //          trails.map((item, index) => {\n        //            let tmp = JSON.parse(item.geoJSON);\n        //            let tmpgeoJSON = \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"properties\\\":{\\\"id\\\": \"+ index +\",\\\"name\\\": \\\"\"+ index.toString() +\"\\\"},\\\"geometry\\\":{\\\"type\\\": \\\"Point\\\", \\\"coordinates\\\": [\" + tmp.features[0].geometry.coordinates[0] + \"]}}]}\";\n        //            console.log(\"item : \" + tmpgeoJSON);\n        //            if (!map.current.getSource(\"marker-\" + index)) {\n        //            map.current.addSource(\"marker-\" + index, {\n        //              type: 'geojson',\n        //              data: tmpgeoJSON,\n        //            });\n        //            map.current.addLayer({\n        //              id:  'marker-layer',\n        //              type: 'symbol',\n        //              source: \"marker-\" + index,\n        //              layout: {\n        //                'icon-image': 'marker-15',\n        //              },\n        //            });\n        //          } else {\n        //            map.current.getSource(\"marker-\" + index).setData(tmpgeoJSON);\n        //          }\n        //          \n        //          });\n        //      } catch (error) {\n        //          console.error('Error fetching GeoJSON:', error);\n        //      }\n        //    }\n        //    fetchGeoJSON(user_data);\n        \n            map.current.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n            return () => { map.current.remove()};\n      });\n\n    return (\n        <Layout>\n                <style jsx>{`\n                    .map-container {\n                        position: absolute;\n                        width: 100%;\n                        height: 100%;\n                    }\n                    `}</style>\n                    <div ref={mapContainer} className=\"map-container\"/>\n            <title>Hik'UP Admin</title>\n        </Layout>\n    );\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,QAAQ,IAAIC,WAAW,QAAQ,WAAW;AACjD,OAAOC,kBAAkB,MAAM,mCAAmC;AAClE,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,OAAO,8BAA8B;AACrCH,QAAQ,CAACC,WAAW,GAAG,kGAAkG;AAIzH,eAAe,SAASG,OAAOA,CAAEC,YAAY,EAAEC,SAAS,EAAE;EAEtD,MAAM;IAAA,GAACC,GAAG;IAAA,GAAEC;EAAM,IAAIX,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM;IAAA,GAACY,GAAG;IAAA,GAAEC;EAAM,IAAIb,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM;IAAA,GAACc,IAAI;IAAA,GAAEC;EAAO,IAAIf,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMgB,GAAG,GAAGlB,MAAM,CAAC,IAAI,CAAC;EACxB,MAAMmB,YAAY,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAEjCC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAGH,eAAe,CAACY,GAAG,CAAC,CAAC;IACvC,IAAIF,GAAG,CAACG,OAAO,EAAE,OAAO,CAAC;IACzBH,GAAG,CAACG,OAAO,GAAG,IAAIhB,QAAQ,CAACiB,GAAG,CAAC;MAC/BC,SAAS,EAAEJ,YAAY,CAACE,OAAO;MAC/BG,KAAK,EAAE,oCAAoC;MAC3CC,MAAM,EAAE,CAACb,GAAG,EAAEE,GAAG,CAAC;MAClBE,IAAI,EAAEA;IACN,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEIE,GAAG,CAACG,OAAO,CAACK,UAAU,CAAC,IAAIrB,QAAQ,CAACsB,iBAAiB,CAAC,CAAC,EAAE,WAAW,CAAC;IACrE,OAAO,MAAM;MAAET,GAAG,CAACG,OAAO,CAACO,MAAM,CAAC,CAAC;IAAA,CAAC;EAC1C,CAAC,CAAC;EAEJ,OACIC,KAAA,CAAC1B,MAAM;IAAA2B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAAN,KAAA,CAAAO,SAAA;IAAAC,EAAA;IAAAP,MAAA;EAAA,skKAQKD,KAAA;IAAKS,GAAG,EAAEnB,YAAa;IAAAoB,SAAA,0BAAW,eAAe;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,EAC3DN,KAAA;IAAAU,SAAA;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,cAAmB,CACtB,CAAC;AAEjB"},"metadata":{},"sourceType":"module"}