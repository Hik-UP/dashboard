{"ast":null,"code":"var _jsxFileName = \"/Users/draki/Documents/Epitech/EIP/dashboard/admin/pages/control/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport API from '../../services/API';\nimport mapboxgl, { accessToken } from \"mapbox-gl\";\nimport UserDataService from \"../../services/UserDataService\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Button, Modal, Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaGljY3VwLXN0YWZmIiwiYSI6ImNsangxeHVkbzAyNmwzdHJ4cmJiYWZmMm4ifQ.yI4259jlMq2elDiT_uK1kg';\nexport default function Control(access_token, user_data) {\n  const {\n    0: newlat,\n    1: setnewlat\n  } = useState(false);\n  const {\n    0: newlgn,\n    1: setnewlgn\n  } = useState(0);\n  const {\n    0: address,\n    1: setaddress\n  } = useState('');\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n  const {\n    0: resultsearch,\n    1: setresultsearch\n  } = useState([]);\n  const {\n    0: selectedMarker,\n    1: setselectedMarker\n  } = useState('');\n  const {\n    0: Trails,\n    1: setTrails\n  } = useState([]);\n  const {\n    0: lngLatSelected,\n    1: setlngLatSelected\n  } = useState(false);\n  const {\n    0: markersLoaded,\n    1: setMarkersLoaded\n  } = useState(false);\n  const {\n    0: username,\n    1: setInputValueUsername\n  } = useState('');\n  const {\n    0: email,\n    1: setInputValueEmail\n  } = useState('');\n  const {\n    0: lng,\n    1: setLng\n  } = useState(2.35);\n  const {\n    0: lat,\n    1: setLat\n  } = useState(48.85);\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState(5);\n  const map = useRef(null);\n  const mapContainer = useRef(null);\n  const {\n    0: isModalOpen,\n    1: setIsModalOpen\n  } = useState(false);\n  const {\n    0: isModalOpenUpdate,\n    1: setIsModalOpenUpdate\n  } = useState(false);\n  const showModaUpdate = () => {\n    setIsModalOpenUpdate(true);\n  };\n  const handleOkUpdate = () => {\n    setIsModalOpenUpdate(false);\n  };\n  const handleCancelUpdate = () => {\n    setIsModalOpenUpdate(false);\n  };\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleSubmit = async () => {\n    if (address) {\n      const fetchResults = async () => {\n        try {\n          const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?access_token=${mapboxgl.accessToken}`);\n          if (response.ok) {\n            const data = await response.json();\n            setResults(data.features);\n          } else {\n            console.error('Error fetching results:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error:', error);\n        }\n        fetchResults();\n      };\n    } else {\n      setResults([]);\n    }\n    updateMarker(selectedMarker);\n  };\n  async function fetchTrails() {\n    try {\n      const user_data = UserDataService.get();\n      console.log(user_data);\n      const response = await API.fetchTrails(\"POST\", '/api/trail/retrieve', user_data, true);\n      let trails = response.data.trails;\n      return trails;\n    } catch (error) {\n      console.error('Error fetching Trails:', error);\n    }\n  }\n  async function getMarker(selectedMarker) {\n    console.log('getMarker');\n    let trails = await fetchTrails();\n    console.dir(trails);\n    for (var i = 0; i < trails.length; i++) {\n      let tmp = JSON.parse(trails[i].geoJSON);\n      console.log('selectedMArker :');\n      console.dir(selectedMarker);\n      if (typeof tmp.features !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0].geometry !== 'undefined' && typeof tmp.features[0].geometry.coordinates[0] !== 'undefined') {\n        if (tmp.features[0].geometry.coordinates[0][0] === selectedMarker.lng && tmp.features[0].geometry.coordinates[0][1] === selectedMarker.lat) {\n          return i;\n        }\n      }\n    }\n  }\n  const fetchCoordinates = async () => {\n    try {\n      const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?access_token=${mapboxgl.accessToken}`);\n      if (response.ok) {\n        const data = await response.json();\n        const [longitude, latitude] = data.features[0].center;\n        setnewlat(latitude);\n        setnewlgn(longitude);\n      } else {\n        console.error('Error fetching coordinates:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  async function updateMarker(selectedMarker) {\n    let index = await getMarker(selectedMarker);\n    console.dir(index);\n    fetchCoordinates();\n    let data = {};\n    let trails = await fetchTrails(user_data);\n    let tmp = JSON.parse(trails[index].geoJSON);\n    console.log('tmp:');\n    console.dir(tmp);\n    data.id = trails[index].id;\n    data.latitude = parseInt(newlat);\n    data.longitude = parseInt(newlgn);\n    console.log(typeof tmp.features[0]);\n    //if (typeof tmp.features[0] !== 'undefined' && tmp.features[0].geometry ==! 'undefined'  && typeof tmp.features[0].geometry.coordinates !== 'undefined') { \n    tmp.features[0].geometry.coordinates[0][0] = parseInt(newlgn);\n    tmp.features[0].geometry.coordinates[0][1] = parseInt(newlat);\n    //}\n    console.log('tmp');\n    console.dir(tmp);\n    data.geoJSON = JSON.stringify(tmp);\n    console.log('here');\n    console.log(data);\n    const user_data = UserDataService.get();\n    const response = await API.CreateMarker('PUT', '/api/trail/update', user_data, data, true);\n    let result = response.data.trails;\n    console.log(result);\n    setIsModalOpenUpdate(false);\n  }\n  const handleOk = async () => {\n    try {\n      const user_data = UserDataService.get();\n      let trail = {};\n      trail.name = \"Added by admin in dashboard\";\n      trail.address = \"Added by admin in dashboard\";\n      trail.description = \"Added by admin in dashboard\";\n      trail.pictures = [\"https://google.com\"];\n      trail.latitude = lngLatSelected.lat;\n      trail.longitude = lngLatSelected.lng;\n      trail.difficulty = 0;\n      trail.duration = 0;\n      trail.distance = 0;\n      trail.uphill = 0;\n      trail.downhill = 0;\n      trail.tools = [];\n      trail.relatedArticles = [];\n      trail.labels = [];\n      let geojson = {\n        features: [{\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'Point',\n            coordinates: [[lngLatSelected.lng, lngLatSelected.lat]]\n          }\n        }]\n      };\n      trail.geoJSON = JSON.stringify(geojson);\n      const response = await API.CreateMarker('POST', '/api/trail/create', user_data, trail, true);\n      console.log(response);\n      setIsModalOpen(false);\n    } catch (error) {\n      console.log(error);\n      setIsModalOpen(false);\n    }\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  useEffect(() => {\n    const user_data = UserDataService.get();\n    loadMarker();\n    if (map.current && markersLoaded == true) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.current.addControl(new mapboxgl.NavigationControl(), 'top-right');\n    map.current.addControl(new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    }));\n    async function fetchGeoJSON() {\n      try {\n        let result = [];\n        const user_data2 = UserDataService.get();\n        const response = await API.send('POST', \"/api/trail/retrieve\", user_data2, true);\n        let trails = response.data.trails;\n        console.log(trails);\n        console.log(response);\n        trails.map(item => {\n          let tmp = JSON.parse(item.geoJSON);\n          console.log(tmp);\n          if (typeof tmp.features !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0].geometry.coordinates[0] !== 'undefined') {\n            result.push(tmp.features[0].geometry.coordinates[0]);\n          } else {\n            //result.push(tmp.features.geometry.coordinates);\n          }\n        });\n        console.log(result);\n        return result;\n      } catch (error) {\n        console.error('Error fetching GeoJSON:', error);\n      }\n    }\n    function isMarkerPresent() {\n      // Check some condition, data, or event to determine if the marker is present\n      // Return true if the marker is present, false if not\n      return true;\n    }\n    async function loadMarker() {\n      let markers = await fetchGeoJSON(user_data);\n      let geojson = {\n        type: 'Feature',\n        features: markers === null || markers === void 0 ? void 0 : markers.map(marker => ({\n          geometry: {\n            type: 'Point',\n            coordinates: {\n              lat: marker[1],\n              lng: marker[0]\n            }\n          }\n        }))\n      };\n      map.current.on('load', () => {\n        var _geojson$features;\n        geojson === null || geojson === void 0 ? void 0 : (_geojson$features = geojson.features) === null || _geojson$features === void 0 ? void 0 : _geojson$features.forEach(marker => {\n          // create a DOM element for the marker\n          const markerIcon = document.createElement('div');\n          markerIcon.className = 'location-marker';\n          markerIcon.style.backgroundImage = 'url(/custom-marker.png)';\n          markerIcon.style.width = '60px';\n          markerIcon.style.height = '90px';\n          new mapboxgl.Marker(markerIcon).setLngLat(marker.geometry.coordinates).addTo(map.current);\n          markerIcon.addEventListener('click', () => {\n            console.dir('marker :' + JSON.stringify(marker.geometry.coordinates));\n            setselectedMarker(marker.geometry.coordinates);\n            setIsModalOpenUpdate(true);\n          });\n        });\n      });\n      setMarkersLoaded(true);\n    }\n    map.current.on('contextmenu', e => {\n      e.preventDefault();\n      const lngLat = e.lngLat;\n      setlngLatSelected(lngLat);\n      console.log('Right-clicked at:', lngLat);\n      setIsModalOpen(true);\n    });\n    //map.current.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    //return () => { map.current.remove()};\n  });\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"855806535\",\n      children: \".map-container.jsx-855806535{position:absolute;width:100%;height:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/draki/Documents/Epitech/EIP/dashboard/admin/pages/control/index.js */\"\n    }, void 0, false, void 0, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"jsx-855806535\" + \" \" + \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Ajout de marqueur\",\n      open: isModalOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jsx-855806535\",\n        children: \"Voulez vous ajouter un marqueur \\xE0 l'emplacement : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jsx-855806535\",\n        children: [\"longitude : \", lngLatSelected.lng, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jsx-855806535\",\n        children: [\"latitude: \", lngLatSelected.lat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Modification du marqueur\",\n      open: isModalOpenUpdate,\n      onOk: handleOkUpdate,\n      onCancel: handleCancelUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jsx-855806535\",\n        children: \"Addresse : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Addresse\",\n        value: address,\n        onChange: e => {\n          setaddress(e.currentTarget.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"jsx-855806535\",\n        children: resultsearch.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"jsx-855806535\",\n          children: result.place_name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jsx-855806535\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["React","useRef","useEffect","useState","Layout","API","mapboxgl","accessToken","UserDataService","Button","Modal","Input","jsxDEV","_jsxDEV","Control","access_token","user_data","newlat","setnewlat","newlgn","setnewlgn","address","setaddress","input","setInput","resultsearch","setresultsearch","selectedMarker","setselectedMarker","Trails","setTrails","lngLatSelected","setlngLatSelected","markersLoaded","setMarkersLoaded","username","setInputValueUsername","email","setInputValueEmail","lng","setLng","lat","setLat","zoom","setZoom","map","mapContainer","isModalOpen","setIsModalOpen","isModalOpenUpdate","setIsModalOpenUpdate","showModaUpdate","handleOkUpdate","handleCancelUpdate","showModal","handleSubmit","fetchResults","response","fetch","ok","data","json","setResults","features","console","error","statusText","updateMarker","fetchTrails","get","log","trails","getMarker","dir","i","length","tmp","JSON","parse","geoJSON","geometry","coordinates","fetchCoordinates","longitude","latitude","center","index","id","parseInt","stringify","CreateMarker","result","handleOk","trail","name","description","pictures","difficulty","duration","distance","uphill","downhill","tools","relatedArticles","labels","geojson","type","properties","handleCancel","loadMarker","current","Map","container","style","addControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","fetchGeoJSON","user_data2","send","item","push","isMarkerPresent","markers","marker","on","_geojson$features","forEach","markerIcon","document","createElement","className","backgroundImage","width","height","Marker","setLngLat","addTo","addEventListener","e","preventDefault","lngLat","children","_JSXStyle","ref","fileName","_jsxFileName","lineNumber","columnNumber","title","open","onOk","onCancel","placeholder","value","onChange","currentTarget","place_name","onClick"],"sources":["/Users/draki/Documents/Epitech/EIP/dashboard/admin/pages/control/index.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport API from '../../services/API';\nimport mapboxgl, { accessToken } from \"mapbox-gl\";\nimport UserDataService from \"../../services/UserDataService\";\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Button, Modal, Input } from 'antd';\nmapboxgl.accessToken = 'pk.eyJ1IjoiaGljY3VwLXN0YWZmIiwiYSI6ImNsangxeHVkbzAyNmwzdHJ4cmJiYWZmMm4ifQ.yI4259jlMq2elDiT_uK1kg';\n\n\n\nexport default function Control (access_token, user_data) {\n    const [newlat, setnewlat] = useState(false);\n    const [newlgn, setnewlgn] =  useState(0);\n    const [address, setaddress] =  useState('');\n    const [input, setInput] = useState('');\n    const [resultsearch, setresultsearch] = useState([]);\n    const [selectedMarker, setselectedMarker] = useState('');\n    const [Trails, setTrails] = useState([]);\n    const [lngLatSelected, setlngLatSelected] = useState(false);\n    const [markersLoaded, setMarkersLoaded] = useState(false);\n\n    const [username, setInputValueUsername] = useState('');\n    const [email, setInputValueEmail] = useState('');\n\n    const [lng, setLng] = useState(2.35);\n    const [lat, setLat] = useState(48.85);\n    const [zoom, setZoom] = useState(5);\n    const map = useRef(null);\n    const mapContainer = useRef(null);\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isModalOpenUpdate, setIsModalOpenUpdate] = useState(false);\n\n    const showModaUpdate = () => {\n      setIsModalOpenUpdate(true);\n    };\n    \n    const handleOkUpdate = () => {\n      setIsModalOpenUpdate(false);\n    };\n\n    const handleCancelUpdate = () => {\n      setIsModalOpenUpdate(false);\n    };\n\n    const showModal = () => {\n      setIsModalOpen(true);\n    };\n\n    const handleSubmit = async () => {\n      if (address) {\n        const fetchResults = async () => {\n          try {\n            const response = await fetch(\n              `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?access_token=${mapboxgl.accessToken}`\n            );\n            if (response.ok) {\n              const data = await response.json();\n              setResults(data.features);\n            } else {\n              console.error('Error fetching results:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        fetchResults();\n       } \n      } else {\n        setResults([]);\n      }\n      updateMarker(selectedMarker);\n    }\n\n\n    async function fetchTrails() {\n      try {\n          const user_data = UserDataService.get();\n          console.log(user_data);\n          const response = await API.fetchTrails(\"POST\", '/api/trail/retrieve', user_data, true);\n            let trails = response.data.trails;\n            return trails;\n        } catch (error) {\n            console.error('Error fetching Trails:', error);\n        }\n    }\n\n    async function getMarker(selectedMarker) {\n      console.log('getMarker');\n      let trails = await fetchTrails();\n      console.dir(trails);\n      for (var i = 0; i < trails.length; i++) {\n        let tmp = JSON.parse(trails[i].geoJSON);\n        console.log('selectedMArker :');\n        console.dir(selectedMarker);\n        if (typeof tmp.features !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0].geometry !== 'undefined'  && typeof tmp.features[0].geometry.coordinates[0] !== 'undefined') { \n          if (tmp.features[0].geometry.coordinates[0][0] === selectedMarker.lng && tmp.features[0].geometry.coordinates[0][1] === selectedMarker.lat) {\n            return i;\n          }\n        }\n      }\n    }\n\n    const  fetchCoordinates = async () => {\n      try {\n        const response = await fetch(\n          `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?access_token=${mapboxgl.accessToken}`\n        );\n  \n        if (response.ok) {\n          const data = await response.json();\n          const [longitude, latitude] = data.features[0].center;\n          setnewlat(latitude);\n          setnewlgn(longitude);\n        } else {\n          console.error('Error fetching coordinates:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n\n    async function updateMarker(selectedMarker) {\n      let index = await getMarker(selectedMarker);\n      console.dir(index);\n      fetchCoordinates();\n      let data = {};\n      let trails = await fetchTrails(user_data);\n      let tmp = JSON.parse(trails[index].geoJSON);\n      console.log('tmp:');\n      console.dir(tmp);\n      data.id = trails[index].id;\n      data.latitude = parseInt(newlat);\n      data.longitude = parseInt(newlgn);\n      console.log(typeof tmp.features[0]);\n      //if (typeof tmp.features[0] !== 'undefined' && tmp.features[0].geometry ==! 'undefined'  && typeof tmp.features[0].geometry.coordinates !== 'undefined') { \n        tmp.features[0].geometry.coordinates[0][0] = parseInt(newlgn);\n        tmp.features[0].geometry.coordinates[0][1] = parseInt(newlat);\n      //}\n      console.log('tmp');\n      console.dir(tmp);\n      data.geoJSON = JSON.stringify(tmp);\n      console.log('here');\n      console.log(data);\n      const user_data = UserDataService.get();\n      const response = await API.CreateMarker('PUT', '/api/trail/update', user_data, data, true);\n      let result = response.data.trails;\n      console.log(result);\n      setIsModalOpenUpdate(false);\n    }\n\n    const handleOk = async () => {\n      try {\n        const user_data = UserDataService.get();\n        let trail = {};\n        trail.name = \"Added by admin in dashboard\";\n        trail.address = \"Added by admin in dashboard\";\n        trail.description = \"Added by admin in dashboard\";\n        trail.pictures = [\"https://google.com\"];\n        trail.latitude = lngLatSelected.lat;\n        trail.longitude = lngLatSelected.lng;\n        trail.difficulty = 0;\n        trail.duration = 0;\n        trail.distance = 0;\n        trail.uphill = 0;\n        trail.downhill = 0;\n        trail.tools = [];\n        trail.relatedArticles = [];\n        trail.labels = [];\n        let geojson = {\n          features: [{\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'Point',\n              coordinates: [[\n                lngLatSelected.lng,\n                lngLatSelected.lat\n              ]]}}]}\n        trail.geoJSON = JSON.stringify(geojson);\n        const response = await API.CreateMarker('POST', '/api/trail/create', user_data, trail, true);\n        console.log(response);\n        setIsModalOpen(false);\n      } catch (error) {\n        console.log(error);\n        setIsModalOpen(false);\n      }\n    };\n    const handleCancel = () => {\n      setIsModalOpen(false);\n    };\n\n    useEffect(() => {\n        const user_data = UserDataService.get();\n        loadMarker();\n        if (map.current && markersLoaded == true ) return; // initialize map only once\n        map.current = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [lng, lat],\n        zoom: zoom\n        });\n        map.current.addControl(new mapboxgl.NavigationControl(), 'top-right');\n        map.current.addControl(\n          new mapboxgl.GeolocateControl({\n            positionOptions: {\n              enableHighAccuracy: true\n            },\n            trackUserLocation: true\n          })\n        );\n\n        async function fetchGeoJSON() {\n          try {\n              let result = [];\n              const user_data2 = UserDataService.get();\n              const response = await API.send('POST', \"/api/trail/retrieve\", user_data2, true);\n                let trails = response.data.trails;\n                console.log(trails);\n                console.log(response);\n                trails.map((item) => {\n                  let tmp = JSON.parse(item.geoJSON);\n                  console.log(tmp);\n                  if (typeof tmp.features !== 'undefined' && typeof tmp.features[0] !== 'undefined' && typeof tmp.features[0] !==  'undefined'  && typeof tmp.features[0].geometry.coordinates[0] !== 'undefined' ) {\n                    result.push(tmp.features[0].geometry.coordinates[0]);\n                  } else {\n                    //result.push(tmp.features.geometry.coordinates);\n                  }\n                });\n                console.log(result);\n                return result;\n            } catch (error) {\n                console.error('Error fetching GeoJSON:', error);\n            }\n        }\n        function isMarkerPresent() {\n          // Check some condition, data, or event to determine if the marker is present\n          // Return true if the marker is present, false if not\n          return true;\n        }\n\n        async function loadMarker() {\n          let markers = await fetchGeoJSON(user_data);\n          let geojson = {\n            type: 'Feature',\n            features: markers?.map((marker) => ({\n              geometry: {\n                type: 'Point',\n                coordinates: {\n                  lat: marker[1],\n                  lng: marker[0]\n                }\n              }\n            }))\n          };\n          map.current.on('load', () => {\n            geojson?.features?.forEach((marker) => {  // create a DOM element for the marker\n            const markerIcon = document.createElement('div');\n            markerIcon.className = 'location-marker';\n            markerIcon.style.backgroundImage = 'url(/custom-marker.png)';\n            markerIcon.style.width =  '60px';\n            markerIcon.style.height = '90px';\n            \n            new mapboxgl.Marker(markerIcon)\n              .setLngLat(marker.geometry.coordinates)\n              .addTo(map.current);\n            \n              markerIcon.addEventListener('click', () => {\n                console.dir('marker :' + JSON.stringify(marker.geometry.coordinates));\n                setselectedMarker(marker.geometry.coordinates);\n                setIsModalOpenUpdate(true);\n              });\n            });\n          });\n          setMarkersLoaded(true);\n        }\n        map.current.on('contextmenu', (e) => {\n          e.preventDefault();\n          const lngLat = e.lngLat;\n          setlngLatSelected(lngLat);\n          console.log('Right-clicked at:', lngLat);\n          setIsModalOpen(true);\n        });\n          //map.current.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n          //return () => { map.current.remove()};\n      });\n      \n    return (\n        <Layout>\n                <style jsx>{`\n                    .map-container {\n                        position: absolute;\n                        width: 100%;\n                        height: 100%;\n                    }\n                    `}</style>\n                    <div ref={mapContainer} className=\"map-container\"/>\n                    <Modal title=\"Ajout de marqueur\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n                    <p>Voulez vous ajouter un marqueur à l'emplacement : </p>\n                    <p>longitude : {lngLatSelected.lng} </p>\n                    <p>latitude: {lngLatSelected.lat}</p>\n                  </Modal>\n                  <Modal title=\"Modification du marqueur\" open={isModalOpenUpdate} onOk={handleOkUpdate} onCancel={handleCancelUpdate}>\n                    <p>Addresse : </p> < Input placeholder=\"Addresse\" value={address} onChange={e => { setaddress(e.currentTarget.value); }}/>\n                    <ul>\n                      {resultsearch.map((result, index) => (\n                      <li key={index}>{result.place_name}</li>\n                      ))}\n                    </ul>\n                    <p></p>\n                    <Button key=\"submit\" type=\"primary\" onClick={handleSubmit}>\n                      Submit\n                    </Button>\n                    </Modal>\n        </Layout>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}