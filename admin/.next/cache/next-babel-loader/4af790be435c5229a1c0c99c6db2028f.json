{"ast":null,"code":"import AccessTokenService from \"./AccessTokenService\";\nimport Router from \"next/router\";\nclass API {\n  getDomain() {\n    return process.env.NEXT_PUBLIC_API_URL;\n  }\n  getApiDomain() {\n    return this.getDomain();\n  }\n  async CreateMarker(method, route, user_data, data = null, auth = true) {\n    let api = this.getApiDomain();\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n    if (auth) {\n      let accessToken = AccessTokenService.get();\n      accessToken = accessToken ? accessToken : '';\n      if (accessToken) headers['Authorization'] = 'Bearer ' + accessToken;\n    }\n    if (method !== \"GET\" && data) {\n      data = JSON.stringify(data);\n      data;\n      data = '{ \\\"user\\\": {\\\"id\\\": \\\"' + user_data.id + '\\\", \\\"roles\\\": [\\\"' + user_data.roles + '\\\"] }, \\\"trail\\\" : ' + data + '}';\n      console.log(data);\n    } else data = null;\n    try {\n      let url = api + route;\n      let response = await fetch(url, {\n        method: method,\n        headers: headers,\n        body: data\n      });\n      console.log(data);\n      return {\n        data: await response.json(),\n        status: response.status\n      };\n    } catch (e) {\n      await Router.push('/');\n      return {\n        data: null,\n        status: -1\n      };\n    }\n  }\n  async send(method, route, data = null, auth = true) {\n    let api = this.getApiDomain();\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n    if (auth) {\n      let accessToken = AccessTokenService.get();\n      accessToken = accessToken ? accessToken : '';\n      if (accessToken) headers['Authorization'] = 'Bearer ' + accessToken;\n    }\n    if (method !== \"GET\" && data) {\n      data = JSON.stringify(data);\n      data = \"{ \\\"user\\\": \" + data + \"}\";\n      console.log(data);\n    } else data = null;\n    try {\n      let url = api + route;\n      let response = await fetch(url, {\n        method: method,\n        headers: headers,\n        body: data\n      });\n      //if (response.status === 401) {\n      //    AccessTokenService.remove();\n      //    return {\n      //        data: await response.json(),\n      //        status: response.status,\n      //    };\n      //} \n      console.log(data);\n      console.log(headers);\n      return {\n        data: await response.json(),\n        status: response.status\n      };\n    } catch (e) {\n      await Router.push('/');\n      return {\n        data: null,\n        status: -1\n      };\n    }\n  }\n}\nconst service = new API();\nexport default service;","map":{"version":3,"names":["AccessTokenService","Router","API","getDomain","process","env","NEXT_PUBLIC_API_URL","getApiDomain","CreateMarker","method","route","user_data","data","auth","api","headers","accessToken","get","JSON","stringify","id","roles","console","log","url","response","fetch","body","json","status","e","push","send","service"],"sources":["/Users/draki/Documents/Epitech/EIP/dashboard/admin/services/API.js"],"sourcesContent":["import AccessTokenService from \"./AccessTokenService\";\nimport Router from \"next/router\";\n\nclass API {\n    getDomain() {\n        return process.env.NEXT_PUBLIC_API_URL;\n    }\n\n    getApiDomain() {\n        return this.getDomain();\n    }\n\n    async CreateMarker(method, route, user_data ,data = null, auth = true) {\n        let api = this.getApiDomain();\n        let headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        };\n        if (auth) {\n            let accessToken = AccessTokenService.get();\n            accessToken = accessToken ? accessToken : '';\n            if (accessToken)\n                headers['Authorization'] = 'Bearer ' + accessToken;\n        }\n        if (method !== \"GET\" && data) {\n            data = JSON.stringify(data);\n            data\n            data = '{ \\\"user\\\": {\\\"id\\\": \\\"'+ user_data.id +'\\\", \\\"roles\\\": [\\\"'+ user_data.roles +'\\\"] }, \\\"trail\\\" : '+ data + '}';\n            console.log(data);\n        }\n        else\n            data = null;\n        try {\n        let url = api + route;\n        let response = await fetch(url, {\n                method: method,\n                headers: headers,\n                body: data,\n            });\n            console.log(data);\n            return {\n                data: await response.json(),\n                status: response.status,\n            };\n        } catch (e) {\n            await Router.push('/');\n            return {\n                data: null,\n                status: -1,\n            };\n        }\n    }\n\n    async send(method, route, data = null, auth = true) {\n        let api = this.getApiDomain();\n        let headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        };\n        if (auth) {\n            let accessToken = AccessTokenService.get();\n            accessToken = accessToken ? accessToken : '';\n            if (accessToken)\n                headers['Authorization'] = 'Bearer ' + accessToken;\n        }\n        if (method !== \"GET\" && data) {\n            data = JSON.stringify(data);\n            data = \"{ \\\"user\\\": \"+ data + \"}\";\n            console.log(data);\n        }\n        else\n            data = null;\n        try {\n        let url = api + route;\n        let response = await fetch(url, {\n                method: method,\n                headers: headers,\n                body: data,\n            });\n            //if (response.status === 401) {\n            //    AccessTokenService.remove();\n            //    return {\n            //        data: await response.json(),\n            //        status: response.status,\n            //    };\n            //} \n            console.log(data);\n            console.log(headers);\n            return {\n                data: await response.json(),\n                status: response.status,\n            };\n        } catch (e) {\n            await Router.push('/');\n            return {\n                data: null,\n                status: -1,\n            };\n        }\n    }\n}\n\nconst service = new API();\nexport default service;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}